function jcamp=readjcamp(filename)

jcamp=struct(   'type',             'jcamp_struct',...
                'title',            '',...
                'data_type',        '',...
                'class',            '',...
                'origin',           '',...
                'owner',            '',...
                'date',             '',...
                'regno',            '',...
                'molform',          '',...
                'ref',              '',...
                'system',           '',...
                'parameters',       '',...
                'state',            '',...
                'path_length',      0,...
                'procedure',        '',...
                'resolution',       1,...
                'processing',       '',...
                'xunits',           '',...
                'yunits',           '',...
                'xfactor',          1,...
                'yfactor',          1,...
                'deltax',           1,...
                'firstx',           1,...
                'lastx',            1,...
                'firsty',           1,...
                'maxx',             1,...
                'minx',             1,...
                'maxy',             1,...
                'miny',             1,...
                'npoints',          1,...
                'x',                [],...
                'y',                []...
            );

temp={};
dim=0;
c=1;

% Read file
fid=fopen(filename,'r');
if(fid<0)
    error(['Error opening file: ',filename]);
end
while 1
    tline = fgetl(fid);
    if ~ischar(tline),   break,   end
    temp{c}=tline;
    c=c+1;
end
 fclose(fid);
 
 %Parse
 Y=[];
 for i=1:length(temp),
     foo=regexp(temp{i},'^[ -.0-9]*$','match');
     %does the line contain only numbers?
     if(isempty(foo))
         %no .. so it is a comment line or other text
         foo=regexp(temp{i},'##[^$]*','match');
         if(isempty(foo)), continue, end;
         foo=regexp(foo{1},'[^#]*','match');
         if(isempty(foo)), continue, end;
         % was not a comment line
         foo=regexp(foo{1},'[^#=]*','match');
         if(strcmp(foo(1),'END')), continue,end;
         jcamp=setprops(jcamp,foo);
     else
         % yes so it is probably a data line
         foo=regexp(foo{1},'[.0-9]*','match');
         dim=length(foo);
         bar=str2double(foo);
         if(any(isnan(bar))), error('Error parsing'), end;
         Y=[Y bar(2:dim)];
     end
 end
 jcamp.x=linspace(jcamp.minx,jcamp.maxx,jcamp.npoints).'*jcamp.xfactor;
 jcamp.y=Y.'*jcamp.yfactor;
 
 
    function jstruct=setprops(jstruct,pair)
        if(length(pair)>2), error('Error.. Confused'),end;
        field_name=upper(pair{1});
        value=pair{2};
        switch(field_name)
            case {'XFACTOR',...
                  'YFACTOR',...
                  'DELTAX',...    
                  'FIRSTX',...
                  'LASTX',...
                  'FIRSTY',...
                  'MAXX',...
                  'MINX',...
                  'MAXY',...
                  'MINY',...
                  'NPOINTS',...
                  'RESOLUTION'}
              jstruct=setfield(jstruct,lower(field_name),str2double(value));
            case {'TITLE',...
                  'CLASS',...
                    'ORIGIN',...
                    'OWNER',...
                    'DATE',...
                    'MOLFORM',...
                    'STATE',...
                    'XUNITS',...
                    'YUNITS'}
                jstruct=setfield(jstruct,lower(field_name),value);
            case 'JCAMP-DX'
            case 'DATA TYPE'
                jstruct=setfield(jstruct,'data_type',value);
            case 'CAS REGISTRY NO'
                jstruct=setfield(jstruct,'regno',value);
            case 'SOURCE REFERENCE'
                jstruct=setfield(jstruct,'ref',value);
            case 'SPECTROMETER/DATA SYSTEM'
                jstruct=setfield(jstruct,'system',value);
            case 'INSTRUMENT PARAMETERS'
            case 'PATH LENGTH'
                tmp=regexp(value,'[.0-9]*','match');
                jstruct=setfield(jstruct,'path_length',str2double(tmp(1)));
            case 'SAMPLING PROCEDURE'
                jstruct=setfield(jstruct,'procedure',value);
            case 'DATA PROCESSING'
                jstruct=setfield(jstruct,'processing',value);
            case 'XYDATA'
            otherwise
                warning(strcat('Unknown field',field_name));
            end
    end
 
end
