% This program reads FDS boundary file data (6 sets of data for +x, -x, +y, 
% -y, +z, -z) and removes header information and text in the FDS boundary file
% A typical boundary file data generated by running the "FDS2ASCII" program
% after running a FDS simulation is shown (first few lines):
%
%Patch	6	3.00<x<	3	0.50<y<	4.5	2.92<z<	3.1				
%	X	  Y	    Z	   GAUGE HEAT FLUX	WALL TEMPERATURE  ADIABATIC	SURFACE	TEMPERATURE
%	m	  m	    m	   kW/m2	        C	              C					
%	3.00  0.51	2.94   0.00	            20.00	          20.00					
%	3.00  0.54	2.94   0.00	            20.00	          20.00					
%	3.00  0.56	2.94   0.00	            20.00	          20.00					
%
% Such text also appear at several locations in the FDS boundary file. This
% program removes the text and writes out an ASCII file.

% Note that this program needs to be executed 6 times using 6 FDS boundary
% output files
% 
% It is assumed that the input file contains the data in the following format:
% x1, y1, z1, AST_1
% x1, y2, z2, AST_2
% .................  (AST = Adiabatic Surface Temperature)


function fds_bf_read

% If "testfds_full.txt" is the FDS boundary file written for one of the six
% directions, then the input text file name should be entered as
% "testfds_full" without the quotes.
%
% The output filename is written as "input filename_out.txt".

fname = input('Enter input text file name without extension( [.txt extension assumed]): ', 's');

file1 = fopen([fname '.txt'],'r' );


c = textscan(file1,'%s','Delimiter','\n');
fclose(file1);
nline = length(c{1});
 
count = 0;

file2 = fopen([fname '_out.csv'],'w' );

%buf = [];
x1 = [];
y1 = [];
z1 = [];
%hf = [];
%wt = [];
ast = [];

fl = fopen([fname '.txt'],'r' );

jj = 1;


while (jj<= nline )
      
       buf = fgetl(fl);
       
       if strncmpi( buf(1), 'P', 1) == 1 || strncmpi( buf(1), 'X', 1) == 1 || strncmpi( buf(1), 'm', 1) == 1 || strncmpi( buf(2), 'P', 1) == 1 || strncmpi( buf(2), 'X', 1) == 1 || strncmpi( buf(2), 'm', 1) == 1
       
           jj = jj + 1;
           continue;
       else
       
           count = count+1;
           
           C=textscan(buf,'%f %f %f %f','delimiter',',');

           x1(count) = cell2mat(C(1));
           y1(count) = cell2mat(C(2));
           z1(count) = cell2mat(C(3));
           ast(count) = cell2mat(C(4));
           
           fprintf(file2,'%9.4f,  %9.4f,  %9.4f,  %9.4f\n',x1(count),y1(count),z1(count),ast(count));
           jj = jj + 1;
       end  

end

fclose(file2);

end