# Makefile for Fire Dynamics Simulator (FDS), Version 5

# To use this makefile, select the appropriate compiler and OS from the list below. For example, to
# compile the 64 bit parallel version (MPI) of FDS under Linux using the Intel compilers type:
#
# make intel_linux_mpi_64

# A make utility for windows may be downloaded from http://gnuwin32.sourceforge.net/packages/make.htm

# The variable VPATH defines where the source code is relative to the current directory

VPATH = ../FDS_Source

# Definition of the non-MPI or MPI object variables

# note: objf_serial and objf_mpi contain only Fortran routines ie not isob.c

objf_serial = prec.o mpis.o smvv.o cons.o devc.o type.o mesh.o func.o data.o irad.o \
             ieva.o pois.o scrc.o radi.o evac.o part.o vege.o ctrl.o turb.o dump.o hvac.o read.o \
             mass.o wall.o fire.o divg.o init.o velo.o pres.o main.o
obj_serial = isob.o $(objf_serial)

objwinf_serial = $(objf_serial:.o=.obj)
objwin_serial = $(obj_serial:.o=.obj)

objf_mpi = prec.o mpip.o smvv.o cons.o devc.o type.o mesh.o func.o data.o irad.o \
          ieva.o pois.o scrc.o radi.o evac.o part.o vege.o ctrl.o turb.o dump.o hvac.o read.o \
          mass.o wall.o fire.o divg.o init.o velo.o pres.o main.o
obj_mpi = isob.o $(objf_mpi)

objwinf_mpi = $(objf_mpi:.o=.obj)
objwin_mpi = $(obj_mpi:.o=.obj)

# General Purpose Rules

objects_serial_linux = $(obj_serial)
objects_mpi_linux = $(obj_mpi)

no_target:
	@echo \******** You did not specify a make target \********
	@echo Please read the comments at the top of the makefile



.SUFFIXES: .c .f90 .o .obj

# ************************************ #
#                                      #
#                WINDOWS               #
#  Intel Compiler for WIN, version 11  #
#                                      #
# ************************************ #

#*** note: the following scripts (located in ..\Scripts directory) must be run before running make with this target
#    ..\Scripts\iclvars ia32
#    ..\Scripts\ifortvars ia32
 
#*** note: the following scripts (located in ..\Scripts directory) must be run before running make with this target
#    ..\Scripts\iclvars intel64
#    ..\Scripts\ifortvars intel64

intel_win : 
# Check for platform-setup
# If PLATFORM=32bit the filename contains "32" and the stacksize for 32bit is set.
# If PLATFORM=64bit the filename contains "64" and the stacksize for 64bit is set
ifeq ($(PLATFORM),32bit)
PLATFORM_FLAG = 32
STACK_WIN_INTEL = /F100000000
endif
ifeq ($(PLATFORM),64bit)
PLATFORM_FLAG = 64
STACK_WIN_INTEL = /F1000000000
endif


# If you want to compile FDS with isob.c file, run the make-utilty with this syntax (Intel-Win only):
# make target COMPILE_ISOB=TRUE , e.g. make intel_win_32_debug COMPILE_ISOB=TRUE
# on all other targets, the compilation of isob.c is default
ifeq ($(COMPILE_ISOB),TRUE)
objects_serial_win = $(objwin_serial)
objects_mpi_win = $(objwin_mpi)
else
objects_serial_win = $(objwinf_serial)
objects_mpi_win = $(objwinf_mpi)
isob_win_lib = ../win$(PLATFORM_FLAG)lib/isob.obj
endif


# Check for MPI
# If MPI=TRUE setup library paths and use MPI-objects to build FDS.
# Also the filename now includes "_mpi"
ifeq ($(MPI),TRUE)
MPILIB = "c:\program files\mpich2\lib\fmpich2.lib"
MPIINCLUDE = /I "c:\program files\mpich2\include"
MPI_NAME = _mpi
ifeq ($(COMPILE_ISOB),TRUE)
objects = $(objects_mpi_win)
endif
else
objects = $(objects_serial_win)
endif


# Check for BUILD
# If BUILD=RELEASE optimized flags are used to compile, 
# if BUILD=DEBUG debug flags are used and the filename ends with "_db"
ifeq ($(BUILD),RELEASE)
FFLAGS = -O2
CFLAGS = -O2 -Dpp_noappend
endif
ifeq ($(BUILD),DEBUG)
FFLAGS = /Qvec_report0 /nologo /debug:full /Od /extend_source:132 /warn:all /warn:nointerfaces /Qtrapuv /fp:strict /fp:except /traceback /check:all /stand:f95
CFLAGS = -Dpp_noappend
BUILD_NAME = _db
endif


# Check for OpenMP
# If OPENMP=TRUE some files are compiled with the OpenMP-flag and the filename contains "_openmp"
ifeq ($(OPENMP),TRUE)
FOPENMPFLAGS = /Qopenmp
OPENMP_NAME = _openmp
endif

intel_win : FFLAGS += $(MPIINCLUDE)
#intel_win : CFLAGS = -O2 -Dpp_noappend #already defined in BUILD
intel_win : FFLAGS_LINKER = $(FFLAGS)
intel_win : FCOMPL = ifort
intel_win : CCOMPL = cl
intel_win : obj = fds$(OPENMP_NAME)$(MPI_NAME)_win_$(PLATFORM_FLAG)$(BUILD_NAME)
intel_win : $(objects)
	$(FCOMPL) -o $(obj) $(FFLAGS_LINKER) $(STACK_WIN_INTEL) $(objects) $(isob_win_lib) $(MPILIB)




# ************************************ #
#                                      #
#                 LINUX                #
# Intel Compiler for Linux, version 11 #
#                                      #
# ************************************ #

intel_linux : 
# Check for platform-setup
# If PLATFORM=32bit the filename contains "32" and the stacksize for 32bit is set.
# If PLATFORM=64bit the filename contains "64" and the stacksize for 64bit is set
ifeq ($(PLATFORM),32bit)
PLATFORM_FLAG = 32
endif
ifeq ($(PLATFORM),64bit)
PLATFORM_FLAG = 64
endif


# Check for MPI
# If MPI=TRUE setup library paths and use MPI-objects to build FDS.
# Also the filename now includes "_mpi"
ifeq ($(MPI),TRUE)
MPI_NAME = _mpi
objects = $(obj_mpi)
FCOMPL = mpif77
else
objects = $(obj_serial)
FCOMPL = ifort
endif


# Check for BUILD
# If BUILD=RELEASE optimized flags are used to compile, 
# if BUILD=DEBUG debug flags are used and the filename ends with "_db"
ifeq ($(BUILD),RELEASE)
FFLAGS = -m32 -O3 -static -vec_report0
CFLAGS = -m32 -O -Dpp_noappend -vec_report0
endif
ifeq ($(BUILD),DEBUG)
FFLAGS = -check all -warn unused -O0 -auto -WB -traceback -g -fpe0 -fltconsistency -static -vec_report0 -ftrapuv -debug full
CFLAGS = -Dpp_noappend -vec_report0
BUILD_NAME = _db
endif
ifeq ($(BUILD),PROFILE)
FFLAGS = -O2 -static -vec_report0 -p
CFLAGS = -O2 -Dpp_noappend -vec_report0 -p
BUILD_NAME = _profile
endif


# Check for OpenMP
# If OPENMP=TRUE some files are compiled with the OpenMP-flag and the filename contains "_openmp"
ifeq ($(OPENMP),TRUE)
FOPENMPFLAGS = -openmp -openmp-link static
OPENMP_NAME = _openmp
endif

intel_linux : FFLAGS += -m$(PLATFORM_FLAG)
#intel_linux : CFLAGS = -O2 -Dpp_noappend #already defined in BUILD
intel_linux : FFLAGS_LINKER = $(FFLAGS) -static-intel
#intel_linux : FCOMPL = ifort #already defined in MPI (ifort or mpif77)
intel_linux : CCOMPL = icc
intel_linux : obj = fds_intel_linux$(OPENMP_NAME)$(MPI_NAME)_$(PLATFORM_FLAG)$(BUILD_NAME)
intel_linux : $(objects)
	$(FCOMPL) -o $(obj) $(FFLAGS_LINKER) $(objects)






# 32 bit
intel_osx_32 : FFLAGS = -O2  -m32 -heap-arrays -vec_report0
intel_osx_32 : CFLAGS = -O2 -m32 -Dpp_noappend -Dpp_OSX -vec_report0
intel_osx_32 : LFLAGS = -static-intel
intel_osx_32 : FFLAGS_CONS = $(FFLAGS)
intel_osx_32 : FFLAGS_CTRL = $(FFLAGS)
intel_osx_32 : FFLAGS_DATA = $(FFLAGS)
intel_osx_32 : FFLAGS_DEVC = $(FFLAGS)
intel_osx_32 : FFLAGS_DIVG = $(FFLAGS)
intel_osx_32 : FFLAGS_DUMP = $(FFLAGS)
intel_osx_32 : FFLAGS_EVAC = $(FFLAGS)
intel_osx_32 : FFLAGS_FIRE = $(FFLAGS)
intel_osx_32 : FFLAGS_FUNC = $(FFLAGS)
intel_osx_32 : FFLAGS_HVAC = $(FFLAGS)
intel_osx_32 : FFLAGS_IEVA = $(FFLAGS)
intel_osx_32 : FFLAGS_INIT = $(FFLAGS)
intel_osx_32 : FFLAGS_IRAD = $(FFLAGS)
intel_osx_32 : FFLAGS_MAIN = $(FFLAGS)
intel_osx_32 : FFLAGS_MASS = $(FFLAGS)
intel_osx_32 : FFLAGS_MESH = $(FFLAGS)
intel_osx_32 : FFLAGS_MPIP = $(FFLAGS)
intel_osx_32 : FFLAGS_MPIS = $(FFLAGS)
intel_osx_32 : FFLAGS_PART = $(FFLAGS)
intel_osx_32 : FFLAGS_POIS = $(FFLAGS)
intel_osx_32 : FFLAGS_PREC = $(FFLAGS)
intel_osx_32 : FFLAGS_PRES = $(FFLAGS)
intel_osx_32 : FFLAGS_RADI = $(FFLAGS)
intel_osx_32 : FFLAGS_READ = $(FFLAGS)
intel_osx_32 : FFLAGS_SCRC = $(FFLAGS)
intel_osx_32 : FFLAGS_SMVV = $(FFLAGS)
intel_osx_32 : FFLAGS_TURB = $(FFLAGS)
intel_osx_32 : FFLAGS_TYPE = $(FFLAGS)
intel_osx_32 : FFLAGS_VEGE = $(FFLAGS)
intel_osx_32 : FFLAGS_VELO = $(FFLAGS)
intel_osx_32 : FFLAGS_WALL = $(FFLAGS)
intel_osx_32 : FFLAGS_LINKER = $(FFLAGS)
intel_osx_32 : FCOMPL = ifort
intel_osx_32 : CCOMPL = icc
intel_osx_32 : obj = fds_intel_osx_32
intel_osx_32 : $(objects_serial_linux)
	$(FCOMPL) $(FFLAGS_LINKER) $(LFLAGS) -o $(obj) $(objects_serial_linux)

mpi_intel_osx_32 : FFLAGS  = -O2 -m32 -heap-arrays -vec_report0
mpi_intel_osx_32 : CFLAGS  = -O2 -m32 -Dpp_noappend -Dpp_OSX -vec_report0
mpi_intel_osx_32 : LFLAGS  = -L$(MPIDIST32)/lib -static-intel
mpi_intel_osx_32 : FFLAGS_CONS = $(FFLAGS)
mpi_intel_osx_32 : FFLAGS_CTRL = $(FFLAGS)
mpi_intel_osx_32 : FFLAGS_DATA = $(FFLAGS)
mpi_intel_osx_32 : FFLAGS_DEVC = $(FFLAGS)
mpi_intel_osx_32 : FFLAGS_DIVG = $(FFLAGS)
mpi_intel_osx_32 : FFLAGS_DUMP = $(FFLAGS)
mpi_intel_osx_32 : FFLAGS_EVAC = $(FFLAGS)
mpi_intel_osx_32 : FFLAGS_FIRE = $(FFLAGS)
mpi_intel_osx_32 : FFLAGS_FUNC = $(FFLAGS)
mpi_intel_osx_32 : FFLAGS_HVAC = $(FFLAGS)
mpi_intel_osx_32 : FFLAGS_IEVA = $(FFLAGS)
mpi_intel_osx_32 : FFLAGS_INIT = $(FFLAGS)
mpi_intel_osx_32 : FFLAGS_IRAD = $(FFLAGS)
mpi_intel_osx_32 : FFLAGS_MAIN = $(FFLAGS)
mpi_intel_osx_32 : FFLAGS_MASS = $(FFLAGS)
mpi_intel_osx_32 : FFLAGS_MESH = $(FFLAGS)
mpi_intel_osx_32 : FFLAGS_MPIP = $(FFLAGS)
mpi_intel_osx_32 : FFLAGS_MPIS = $(FFLAGS)
mpi_intel_osx_32 : FFLAGS_PART = $(FFLAGS)
mpi_intel_osx_32 : FFLAGS_POIS = $(FFLAGS)
mpi_intel_osx_32 : FFLAGS_PREC = $(FFLAGS)
mpi_intel_osx_32 : FFLAGS_PRES = $(FFLAGS)
mpi_intel_osx_32 : FFLAGS_RADI = $(FFLAGS)
mpi_intel_osx_32 : FFLAGS_READ = $(FFLAGS)
mpi_intel_osx_32 : FFLAGS_SCRC = $(FFLAGS)
mpi_intel_osx_32 : FFLAGS_SMVV = $(FFLAGS)
mpi_intel_osx_32 : FFLAGS_TURB = $(FFLAGS)
mpi_intel_osx_32 : FFLAGS_TYPE = $(FFLAGS)
mpi_intel_osx_32 : FFLAGS_VEGE = $(FFLAGS)
mpi_intel_osx_32 : FFLAGS_VELO = $(FFLAGS)
mpi_intel_osx_32 : FFLAGS_WALL = $(FFLAGS)
mpi_intel_osx_32 : FFLAGS_LINKER = $(FFLAGS)
mpi_intel_osx_32 : FCOMPL  = $(MPIDIST32)/bin/mpif77
mpi_intel_osx_32 : CCOMPL  = icc
mpi_intel_osx_32 : obj = fds_mpi_intel_osx_32
mpi_intel_osx_32 : $(objects_mpi_linux)
	$(FCOMPL) $(FFLAGS_LINKER) $(LFLAGS) -o $(obj) $(objects_mpi_linux)

intel_osx_32_db : FFLAGS = -check -warn unused -O0 -m32 -g -traceback -fpe:0 -fltconsistency -FR -WB -vec_report0
intel_osx_32_db : CFLAGS = -O0 -m32 -g -traceback -Dpp_noappend -Dpp_OSX -vec_report0
intel_osx_32_db : FFLAGS_CONS = $(FFLAGS)
intel_osx_32_db : FFLAGS_CTRL = $(FFLAGS)
intel_osx_32_db : FFLAGS_DATA = $(FFLAGS)
intel_osx_32_db : FFLAGS_DEVC = $(FFLAGS)
intel_osx_32_db : FFLAGS_DIVG = $(FFLAGS)
intel_osx_32_db : FFLAGS_DUMP = $(FFLAGS)
intel_osx_32_db : FFLAGS_EVAC = $(FFLAGS)
intel_osx_32_db : FFLAGS_FIRE = $(FFLAGS)
intel_osx_32_db : FFLAGS_FUNC = $(FFLAGS)
intel_osx_32_db : FFLAGS_HVAC = $(FFLAGS)
intel_osx_32_db : FFLAGS_IEVA = $(FFLAGS)
intel_osx_32_db : FFLAGS_INIT = $(FFLAGS)
intel_osx_32_db : FFLAGS_IRAD = $(FFLAGS)
intel_osx_32_db : FFLAGS_MAIN = $(FFLAGS)
intel_osx_32_db : FFLAGS_MASS = $(FFLAGS)
intel_osx_32_db : FFLAGS_MESH = $(FFLAGS)
intel_osx_32_db : FFLAGS_MPIP = $(FFLAGS)
intel_osx_32_db : FFLAGS_MPIS = $(FFLAGS)
intel_osx_32_db : FFLAGS_PART = $(FFLAGS)
intel_osx_32_db : FFLAGS_POIS = $(FFLAGS)
intel_osx_32_db : FFLAGS_PREC = $(FFLAGS)
intel_osx_32_db : FFLAGS_PRES = $(FFLAGS)
intel_osx_32_db : FFLAGS_RADI = $(FFLAGS)
intel_osx_32_db : FFLAGS_READ = $(FFLAGS)
intel_osx_32_db : FFLAGS_SCRC = $(FFLAGS)
intel_osx_32_db : FFLAGS_SMVV = $(FFLAGS)
intel_osx_32_db : FFLAGS_TURB = $(FFLAGS)
intel_osx_32_db : FFLAGS_TYPE = $(FFLAGS)
intel_osx_32_db : FFLAGS_VEGE = $(FFLAGS)
intel_osx_32_db : FFLAGS_VELO = $(FFLAGS)
intel_osx_32_db : FFLAGS_WALL = $(FFLAGS)
intel_osx_32_db : FFLAGS_LINKER = $(FFLAGS)
intel_osx_32_db : FCOMPL = ifort
intel_osx_32_db : CCOMPL = icc
intel_osx_32_db : obj = fds_intel_osx_32_db
intel_osx_32_db : $(objects_serial_linux)
	$(FCOMPL) $(FFLAGS_LINKER) $(LFLAGS) -o $(obj) $(objects_serial_linux)

intel_osx_mpi_32_db : FFLAGS  = -check -warn unused -O0 -m32 -g -traceback -fpe:0 -vec_report0
intel_osx_mpi_32_db : CFLAGS  = -O0 -m32 -g -traceback -Dpp_noappend -Dpp_OSX
intel_osx_mpi_32_db : FFLAGS_CONS = $(FFLAGS)
intel_osx_mpi_32_db : FFLAGS_CTRL = $(FFLAGS)
intel_osx_mpi_32_db : FFLAGS_DATA = $(FFLAGS)
intel_osx_mpi_32_db : FFLAGS_DEVC = $(FFLAGS)
intel_osx_mpi_32_db : FFLAGS_DIVG = $(FFLAGS)
intel_osx_mpi_32_db : FFLAGS_DUMP = $(FFLAGS)
intel_osx_mpi_32_db : FFLAGS_EVAC = $(FFLAGS)
intel_osx_mpi_32_db : FFLAGS_FIRE = $(FFLAGS)
intel_osx_mpi_32_db : FFLAGS_FUNC = $(FFLAGS)
intel_osx_mpi_32_db : FFLAGS_HVAC = $(FFLAGS)
intel_osx_mpi_32_db : FFLAGS_IEVA = $(FFLAGS)
intel_osx_mpi_32_db : FFLAGS_INIT = $(FFLAGS)
intel_osx_mpi_32_db : FFLAGS_IRAD = $(FFLAGS)
intel_osx_mpi_32_db : FFLAGS_MAIN = $(FFLAGS)
intel_osx_mpi_32_db : FFLAGS_MASS = $(FFLAGS)
intel_osx_mpi_32_db : FFLAGS_MESH = $(FFLAGS)
intel_osx_mpi_32_db : FFLAGS_MPIP = $(FFLAGS)
intel_osx_mpi_32_db : FFLAGS_MPIS = $(FFLAGS)
intel_osx_mpi_32_db : FFLAGS_PART = $(FFLAGS)
intel_osx_mpi_32_db : FFLAGS_POIS = $(FFLAGS)
intel_osx_mpi_32_db : FFLAGS_PREC = $(FFLAGS)
intel_osx_mpi_32_db : FFLAGS_PRES = $(FFLAGS)
intel_osx_mpi_32_db : FFLAGS_RADI = $(FFLAGS)
intel_osx_mpi_32_db : FFLAGS_READ = $(FFLAGS)
intel_osx_mpi_32_db : FFLAGS_SCRC = $(FFLAGS)
intel_osx_mpi_32_db : FFLAGS_SMVV = $(FFLAGS)
intel_osx_mpi_32_db : FFLAGS_TURB = $(FFLAGS)
intel_osx_mpi_32_db : FFLAGS_TYPE = $(FFLAGS)
intel_osx_mpi_32_db : FFLAGS_VEGE = $(FFLAGS)
intel_osx_mpi_32_db : FFLAGS_VELO = $(FFLAGS)
intel_osx_mpi_32_db : FFLAGS_WALL = $(FFLAGS)
intel_osx_mpi_32_db : FFLAGS_LINKER = $(FFLAGS)
intel_osx_mpi_32_db : FCOMPL  = /opt/openmpi32/bin/mpif77
intel_osx_mpi_32_db : CCOMPL  = icc
intel_osx_mpi_32_db : obj = fds_mpi_intel_osx_32_db
intel_osx_mpi_32_db : $(objects_mpi_linux)
	$(FCOMPL) $(FFLAGS_LINKER) $(LFLAGS) -o $(obj) $(objects_mpi_linux)

# 64 bit
# temporary fix for 64 bit osx build problem
# un-comment following line if building intel_osx_64 target
#irad.o:	FFLAGS = -O0 -m64 -heap-arrays
intel_osx_64 : FFLAGS = -O2 -m64 -heap-arrays
intel_osx_64 : CFLAGS = -O2 -m64 -Dpp_noappend -Dpp_OSX -vec_report0
intel_osx_64 : LFLAGS = -static-intel
intel_osx_64 : FFLAGS_CONS = $(FFLAGS)
intel_osx_64 : FFLAGS_CTRL = $(FFLAGS)
intel_osx_64 : FFLAGS_DATA = $(FFLAGS)
intel_osx_64 : FFLAGS_DEVC = $(FFLAGS)
intel_osx_64 : FFLAGS_DIVG = $(FFLAGS)
intel_osx_64 : FFLAGS_DUMP = $(FFLAGS)
intel_osx_64 : FFLAGS_EVAC = $(FFLAGS)
intel_osx_64 : FFLAGS_FIRE = $(FFLAGS)
intel_osx_64 : FFLAGS_FUNC = $(FFLAGS)
intel_osx_64 : FFLAGS_HVAC = $(FFLAGS)
intel_osx_64 : FFLAGS_IEVA = $(FFLAGS)
intel_osx_64 : FFLAGS_INIT = $(FFLAGS)
intel_osx_64 : FFLAGS_IRAD = $(FFLAGS)
intel_osx_64 : FFLAGS_MAIN = $(FFLAGS)
intel_osx_64 : FFLAGS_MASS = $(FFLAGS)
intel_osx_64 : FFLAGS_MESH = $(FFLAGS)
intel_osx_64 : FFLAGS_MPIP = $(FFLAGS)
intel_osx_64 : FFLAGS_MPIS = $(FFLAGS)
intel_osx_64 : FFLAGS_PART = $(FFLAGS)
intel_osx_64 : FFLAGS_POIS = $(FFLAGS)
intel_osx_64 : FFLAGS_PREC = $(FFLAGS)
intel_osx_64 : FFLAGS_PRES = $(FFLAGS)
intel_osx_64 : FFLAGS_RADI = $(FFLAGS)
intel_osx_64 : FFLAGS_READ = $(FFLAGS)
intel_osx_64 : FFLAGS_SCRC = $(FFLAGS)
intel_osx_64 : FFLAGS_SMVV = $(FFLAGS)
intel_osx_64 : FFLAGS_TURB = $(FFLAGS)
intel_osx_64 : FFLAGS_TYPE = $(FFLAGS)
intel_osx_64 : FFLAGS_VEGE = $(FFLAGS)
intel_osx_64 : FFLAGS_VELO = $(FFLAGS)
intel_osx_64 : FFLAGS_WALL = $(FFLAGS)
intel_osx_64 : FFLAGS_LINKER = $(FFLAGS)
intel_osx_64 : FCOMPL = ifort
intel_osx_64 : CCOMPL = icc
intel_osx_64 : obj = fds_intel_osx_64
intel_osx_64 : $(objects_serial_linux)
	$(FCOMPL) $(FFLAGS_LINKER) $(LFLAGS) -o $(obj) $(objects_serial_linux)

mpi_intel_osx_64 : FFLAGS  = -O2 -m64 -heap-arrays -vec_report0
mpi_intel_osx_64 : CFLAGS  = -O2 -m64 -Dpp_noappend -Dpp_OSX -vec_report0
mpi_intel_osx_64 : LFLAGS  = -L$(MPIDIST64)/lib -static-intel
mpi_intel_osx_64 : FFLAGS_CONS = $(FFLAGS)
mpi_intel_osx_64 : FFLAGS_CTRL = $(FFLAGS)
mpi_intel_osx_64 : FFLAGS_DATA = $(FFLAGS)
mpi_intel_osx_64 : FFLAGS_DEVC = $(FFLAGS)
mpi_intel_osx_64 : FFLAGS_DIVG = $(FFLAGS)
mpi_intel_osx_64 : FFLAGS_DUMP = $(FFLAGS)
mpi_intel_osx_64 : FFLAGS_EVAC = $(FFLAGS)
mpi_intel_osx_64 : FFLAGS_FIRE = $(FFLAGS)
mpi_intel_osx_64 : FFLAGS_FUNC = $(FFLAGS)
mpi_intel_osx_64 : FFLAGS_HVAC = $(FFLAGS)
mpi_intel_osx_64 : FFLAGS_IEVA = $(FFLAGS)
mpi_intel_osx_64 : FFLAGS_INIT = $(FFLAGS)
mpi_intel_osx_64 : FFLAGS_IRAD = $(FFLAGS)
mpi_intel_osx_64 : FFLAGS_MAIN = $(FFLAGS)
mpi_intel_osx_64 : FFLAGS_MASS = $(FFLAGS)
mpi_intel_osx_64 : FFLAGS_MESH = $(FFLAGS)
mpi_intel_osx_64 : FFLAGS_MPIP = $(FFLAGS)
mpi_intel_osx_64 : FFLAGS_MPIS = $(FFLAGS)
mpi_intel_osx_64 : FFLAGS_PART = $(FFLAGS)
mpi_intel_osx_64 : FFLAGS_POIS = $(FFLAGS)
mpi_intel_osx_64 : FFLAGS_PREC = $(FFLAGS)
mpi_intel_osx_64 : FFLAGS_PRES = $(FFLAGS)
mpi_intel_osx_64 : FFLAGS_RADI = $(FFLAGS)
mpi_intel_osx_64 : FFLAGS_READ = $(FFLAGS)
mpi_intel_osx_64 : FFLAGS_SCRC = $(FFLAGS)
mpi_intel_osx_64 : FFLAGS_SMVV = $(FFLAGS)
mpi_intel_osx_64 : FFLAGS_TURB = $(FFLAGS)
mpi_intel_osx_64 : FFLAGS_TYPE = $(FFLAGS)
mpi_intel_osx_64 : FFLAGS_VEGE = $(FFLAGS)
mpi_intel_osx_64 : FFLAGS_VELO = $(FFLAGS)
mpi_intel_osx_64 : FFLAGS_WALL = $(FFLAGS)
mpi_intel_osx_64 : FFLAGS_LINKER = $(FFLAGS)
mpi_intel_osx_64 : FCOMPL  = $(MPIDIST64)/bin/mpif77
mpi_intel_osx_64 : CCOMPL  = icc
mpi_intel_osx_64 : obj = fds_mpi_intel_osx_64
mpi_intel_osx_64 : $(objects_mpi_linux)
	$(FCOMPL) $(FFLAGS_LINKER) $(LFLAGS) -o $(obj) $(objects_mpi_linux)

intel_osx_64_db : FFLAGS = -check -warn unused -O2 -m64 -g -traceback -save-temps -fpe:0 -fltconsistency -fp-stack-check -FR -WB -vec_report0
intel_osx_64_db : CFLAGS = -O2 -g -traceback -m64 -Dpp_noappend -Dpp_OSX -vec_report0
intel_osx_64_db : FFLAGS_CONS = $(FFLAGS)
intel_osx_64_db : FFLAGS_CTRL = $(FFLAGS)
intel_osx_64_db : FFLAGS_DATA = $(FFLAGS)
intel_osx_64_db : FFLAGS_DEVC = $(FFLAGS)
intel_osx_64_db : FFLAGS_DIVG = $(FFLAGS)
intel_osx_64_db : FFLAGS_DUMP = $(FFLAGS)
intel_osx_64_db : FFLAGS_EVAC = $(FFLAGS)
intel_osx_64_db : FFLAGS_FIRE = $(FFLAGS)
intel_osx_64_db : FFLAGS_FUNC = $(FFLAGS)
intel_osx_64_db : FFLAGS_HVAC = $(FFLAGS)
intel_osx_64_db : FFLAGS_IEVA = $(FFLAGS)
intel_osx_64_db : FFLAGS_INIT = $(FFLAGS)
intel_osx_64_db : FFLAGS_IRAD = $(FFLAGS)
intel_osx_64_db : FFLAGS_MAIN = $(FFLAGS)
intel_osx_64_db : FFLAGS_MASS = $(FFLAGS)
intel_osx_64_db : FFLAGS_MESH = $(FFLAGS)
intel_osx_64_db : FFLAGS_MPIP = $(FFLAGS)
intel_osx_64_db : FFLAGS_MPIS = $(FFLAGS)
intel_osx_64_db : FFLAGS_PART = $(FFLAGS)
intel_osx_64_db : FFLAGS_POIS = $(FFLAGS)
intel_osx_64_db : FFLAGS_PREC = $(FFLAGS)
intel_osx_64_db : FFLAGS_PRES = $(FFLAGS)
intel_osx_64_db : FFLAGS_RADI = $(FFLAGS)
intel_osx_64_db : FFLAGS_READ = $(FFLAGS)
intel_osx_64_db : FFLAGS_SCRC = $(FFLAGS)
intel_osx_64_db : FFLAGS_SMVV = $(FFLAGS)
intel_osx_64_db : FFLAGS_TURB = $(FFLAGS)
intel_osx_64_db : FFLAGS_TYPE = $(FFLAGS)
intel_osx_64_db : FFLAGS_VEGE = $(FFLAGS)
intel_osx_64_db : FFLAGS_VELO = $(FFLAGS)
intel_osx_64_db : FFLAGS_WALL = $(FFLAGS)
intel_osx_64_db : FFLAGS_LINKER = $(FFLAGS)
intel_osx_64_db : FCOMPL = ifort
intel_osx_64_db : CCOMPL = icc
intel_osx_64_db : obj = fds_intel_osx_64_db
intel_osx_64_db : $(objects_serial_linux)
	$(FCOMPL) $(FFLAGS_LINKER) $(LFLAGS) -o $(obj) $(objects_serial_linux)

intel_osx_mpi_64_db : FFLAGS  = -check -warn unused -O0 -g -traceback -m64 -fpe:0 -fp-stack-check -save-temps -vec_report0
intel_osx_mpi_64_db : CFLAGS  = -O0 -g -traceback -m64 -Dpp_noappend -Dpp_OSX -vec_report0
intel_osx_mpi_64_db : FFLAGS_CONS = $(FFLAGS)
intel_osx_mpi_64_db : FFLAGS_CTRL = $(FFLAGS)
intel_osx_mpi_64_db : FFLAGS_DATA = $(FFLAGS)
intel_osx_mpi_64_db : FFLAGS_DEVC = $(FFLAGS)
intel_osx_mpi_64_db : FFLAGS_DIVG = $(FFLAGS)
intel_osx_mpi_64_db : FFLAGS_DUMP = $(FFLAGS)
intel_osx_mpi_64_db : FFLAGS_EVAC = $(FFLAGS)
intel_osx_mpi_64_db : FFLAGS_FIRE = $(FFLAGS)
intel_osx_mpi_64_db : FFLAGS_FUNC = $(FFLAGS)
intel_osx_mpi_64_db : FFLAGS_HVAC = $(FFLAGS)
intel_osx_mpi_64_db : FFLAGS_IEVA = $(FFLAGS)
intel_osx_mpi_64_db : FFLAGS_INIT = $(FFLAGS)
intel_osx_mpi_64_db : FFLAGS_IRAD = $(FFLAGS)
intel_osx_mpi_64_db : FFLAGS_MAIN = $(FFLAGS)
intel_osx_mpi_64_db : FFLAGS_MASS = $(FFLAGS)
intel_osx_mpi_64_db : FFLAGS_MESH = $(FFLAGS)
intel_osx_mpi_64_db : FFLAGS_MPIP = $(FFLAGS)
intel_osx_mpi_64_db : FFLAGS_MPIS = $(FFLAGS)
intel_osx_mpi_64_db : FFLAGS_PART = $(FFLAGS)
intel_osx_mpi_64_db : FFLAGS_POIS = $(FFLAGS)
intel_osx_mpi_64_db : FFLAGS_PREC = $(FFLAGS)
intel_osx_mpi_64_db : FFLAGS_PRES = $(FFLAGS)
intel_osx_mpi_64_db : FFLAGS_RADI = $(FFLAGS)
intel_osx_mpi_64_db : FFLAGS_READ = $(FFLAGS)
intel_osx_mpi_64_db : FFLAGS_SCRC = $(FFLAGS)
intel_osx_mpi_64_db : FFLAGS_SMVV = $(FFLAGS)
intel_osx_mpi_64_db : FFLAGS_TURB = $(FFLAGS)
intel_osx_mpi_64_db : FFLAGS_TYPE = $(FFLAGS)
intel_osx_mpi_64_db : FFLAGS_VEGE = $(FFLAGS)
intel_osx_mpi_64_db : FFLAGS_VELO = $(FFLAGS)
intel_osx_mpi_64_db : FFLAGS_WALL = $(FFLAGS)
intel_osx_mpi_64_db : FFLAGS_LINKER = $(FFLAGS)
intel_osx_mpi_64_db : FCOMPL  = /opt/openmpi64/bin/mpif77
intel_osx_mpi_64_db : CCOMPL  = icc
intel_osx_mpi_64_db : obj = fds_mpi_intel_osx_64_db
intel_osx_mpi_64_db : $(objects_mpi_linux)
	$(FCOMPL) $(FFLAGS_LINKER) $(LFLAGS) -o $(obj) $(objects_serial_linux)

#*** IBM XLF Compiler ***

ibm_osx_ppc : FFLAGS = -O4 -qstrict -qextname -qarch=auto -qtune=auto
ibm_osx_ppc : CFLAGS = -O3 -D pp_OSX
ibm_osx_ppc : FFLAGS_CONS = $(FFLAGS)
ibm_osx_ppc : FFLAGS_CTRL = $(FFLAGS)
ibm_osx_ppc : FFLAGS_DATA = $(FFLAGS)
ibm_osx_ppc : FFLAGS_DEVC = $(FFLAGS)
ibm_osx_ppc : FFLAGS_DIVG = $(FFLAGS)
ibm_osx_ppc : FFLAGS_DUMP = $(FFLAGS)
ibm_osx_ppc : FFLAGS_EVAC = $(FFLAGS)
ibm_osx_ppc : FFLAGS_FIRE = $(FFLAGS)
ibm_osx_ppc : FFLAGS_FUNC = $(FFLAGS)
ibm_osx_ppc : FFLAGS_HVAC = $(FFLAGS)
ibm_osx_ppc : FFLAGS_IEVA = $(FFLAGS)
ibm_osx_ppc : FFLAGS_INIT = $(FFLAGS)
ibm_osx_ppc : FFLAGS_IRAD = $(FFLAGS)
ibm_osx_ppc : FFLAGS_MAIN = $(FFLAGS)
ibm_osx_ppc : FFLAGS_MASS = $(FFLAGS)
ibm_osx_ppc : FFLAGS_MESH = $(FFLAGS)
ibm_osx_ppc : FFLAGS_MPIP = $(FFLAGS)
ibm_osx_ppc : FFLAGS_MPIS = $(FFLAGS)
ibm_osx_ppc : FFLAGS_PART = $(FFLAGS)
ibm_osx_ppc : FFLAGS_POIS = $(FFLAGS)
ibm_osx_ppc : FFLAGS_PREC = $(FFLAGS)
ibm_osx_ppc : FFLAGS_PRES = $(FFLAGS)
ibm_osx_ppc : FFLAGS_RADI = $(FFLAGS)
ibm_osx_ppc : FFLAGS_READ = $(FFLAGS)
ibm_osx_ppc : FFLAGS_SCRC = $(FFLAGS)
ibm_osx_ppc : FFLAGS_SMVV = $(FFLAGS)
ibm_osx_ppc : FFLAGS_TURB = $(FFLAGS)
ibm_osx_ppc : FFLAGS_TYPE = $(FFLAGS)
ibm_osx_ppc : FFLAGS_VEGE = $(FFLAGS)
ibm_osx_ppc : FFLAGS_VELO = $(FFLAGS)
ibm_osx_ppc : FFLAGS_WALL = $(FFLAGS)
ibm_osx_ppc : FFLAGS_LINKER = $(FFLAGS)
ibm_osx_ppc : FCOMPL = /opt/ibmcmp/xlf/8.1/bin/xlf95
ibm_osx_ppc : CCOMPL = gcc
ibm_osx_ppc : obj = fds_osx_ppc_ibm
ibm_osx_ppc : $(objects_serial_linux)
	$(FCOMPL) $(FFLAGS_LINKER) $(LFLAGS) -o $(obj) $(objects_serial_linux)

#*** Lahey Compiler ***

lahey_linux : FFLAGS = -O --tpp --staticlink --nap --nchk --npca --nsav --ntrace
lahey_linux : CFLAGS = -O
lahey_linux : FFLAGS_CONS = $(FFLAGS)
lahey_linux : FFLAGS_CTRL = $(FFLAGS)
lahey_linux : FFLAGS_DATA = $(FFLAGS)
lahey_linux : FFLAGS_DEVC = $(FFLAGS)
lahey_linux : FFLAGS_DIVG = $(FFLAGS)
lahey_linux : FFLAGS_DUMP = $(FFLAGS)
lahey_linux : FFLAGS_EVAC = $(FFLAGS)
lahey_linux : FFLAGS_FIRE = $(FFLAGS)
lahey_linux : FFLAGS_FUNC = $(FFLAGS)
lahey_linux : FFLAGS_HVAC = $(FFLAGS)
lahey_linux : FFLAGS_IEVA = $(FFLAGS)
lahey_linux : FFLAGS_INIT = $(FFLAGS)
lahey_linux : FFLAGS_IRAD = $(FFLAGS)
lahey_linux : FFLAGS_MAIN = $(FFLAGS)
lahey_linux : FFLAGS_MASS = $(FFLAGS)
lahey_linux : FFLAGS_MESH = $(FFLAGS)
lahey_linux : FFLAGS_MPIP = $(FFLAGS)
lahey_linux : FFLAGS_MPIS = $(FFLAGS)
lahey_linux : FFLAGS_PART = $(FFLAGS)
lahey_linux : FFLAGS_POIS = $(FFLAGS)
lahey_linux : FFLAGS_PREC = $(FFLAGS)
lahey_linux : FFLAGS_PRES = $(FFLAGS)
lahey_linux : FFLAGS_RADI = $(FFLAGS)
lahey_linux : FFLAGS_READ = $(FFLAGS)
lahey_linux : FFLAGS_SCRC = $(FFLAGS)
lahey_linux : FFLAGS_SMVV = $(FFLAGS)
lahey_linux : FFLAGS_TURB = $(FFLAGS)
lahey_linux : FFLAGS_TYPE = $(FFLAGS)
lahey_linux : FFLAGS_VEGE = $(FFLAGS)
lahey_linux : FFLAGS_VELO = $(FFLAGS)
lahey_linux : FFLAGS_WALL = $(FFLAGS)
lahey_linux : FFLAGS_LINKER = $(FFLAGS)
lahey_linux : FCOMPL = lf95
lahey_linux : CCOMPL = gcc
lahey_linux : obj = fds_lahey
lahey_linux : $(objects_serial_linux)
	$(FCOMPL) $(FFLAGS_LINKER) $(LFLAGS) -o $(obj) $(objects_serial_linux)

lahey_linux_db : FFLAGS = --swm 3909 --wo --tpp --chk --f95 -g --warn --staticlink
lahey_linux_db : CFLAGS = -O
lahey_linux_db : FFLAGS_CONS = $(FFLAGS)
lahey_linux_db : FFLAGS_CTRL = $(FFLAGS)
lahey_linux_db : FFLAGS_DATA = $(FFLAGS)
lahey_linux_db : FFLAGS_DEVC = $(FFLAGS)
lahey_linux_db : FFLAGS_DIVG = $(FFLAGS)
lahey_linux_db : FFLAGS_DUMP = $(FFLAGS)
lahey_linux_db : FFLAGS_EVAC = $(FFLAGS)
lahey_linux_db : FFLAGS_FIRE = $(FFLAGS)
lahey_linux_db : FFLAGS_FUNC = $(FFLAGS)
lahey_linux_db : FFLAGS_HVAC = $(FFLAGS)
lahey_linux_db : FFLAGS_IEVA = $(FFLAGS)
lahey_linux_db : FFLAGS_INIT = $(FFLAGS)
lahey_linux_db : FFLAGS_IRAD = $(FFLAGS)
lahey_linux_db : FFLAGS_MAIN = $(FFLAGS)
lahey_linux_db : FFLAGS_MASS = $(FFLAGS)
lahey_linux_db : FFLAGS_MESH = $(FFLAGS)
lahey_linux_db : FFLAGS_MPIP = $(FFLAGS)
lahey_linux_db : FFLAGS_MPIS = $(FFLAGS)
lahey_linux_db : FFLAGS_PART = $(FFLAGS)
lahey_linux_db : FFLAGS_POIS = $(FFLAGS)
lahey_linux_db : FFLAGS_PREC = $(FFLAGS)
lahey_linux_db : FFLAGS_PRES = $(FFLAGS)
lahey_linux_db : FFLAGS_RADI = $(FFLAGS)
lahey_linux_db : FFLAGS_READ = $(FFLAGS)
lahey_linux_db : FFLAGS_SCRC = $(FFLAGS)
lahey_linux_db : FFLAGS_SMVV = $(FFLAGS)
lahey_linux_db : FFLAGS_TURB = $(FFLAGS)
lahey_linux_db : FFLAGS_TYPE = $(FFLAGS)
lahey_linux_db : FFLAGS_VEGE = $(FFLAGS)
lahey_linux_db : FFLAGS_VELO = $(FFLAGS)
lahey_linux_db : FFLAGS_WALL = $(FFLAGS)
lahey_linux_db : FFLAGS_LINKER = $(FFLAGS)
lahey_linux_db : FCOMPL = lf95
lahey_linux_db : CCOMPL = gcc
lahey_linux_db : obj = fds_lahey_db
lahey_linux_db : $(objects_serial_linux)
	$(FCOMPL) $(FFLAGS_LINKER) $(LFLAGS) -o $(obj) $(objects_serial_linux)

lahey_linux_mpi : FFLAGS = -O --tpp --staticlink --nap --nchk --npca --nsav --ntrace
lahey_linux_mpi : CFLAGS = -O
lahey_linux_mpi : FFLAGS_CONS = $(FFLAGS)
lahey_linux_mpi : FFLAGS_CTRL = $(FFLAGS)
lahey_linux_mpi : FFLAGS_DATA = $(FFLAGS)
lahey_linux_mpi : FFLAGS_DEVC = $(FFLAGS)
lahey_linux_mpi : FFLAGS_DIVG = $(FFLAGS)
lahey_linux_mpi : FFLAGS_DUMP = $(FFLAGS)
lahey_linux_mpi : FFLAGS_EVAC = $(FFLAGS)
lahey_linux_mpi : FFLAGS_FIRE = $(FFLAGS)
lahey_linux_mpi : FFLAGS_FUNC = $(FFLAGS)
lahey_linux_mpi : FFLAGS_HVAC = $(FFLAGS)
lahey_linux_mpi : FFLAGS_IEVA = $(FFLAGS)
lahey_linux_mpi : FFLAGS_INIT = $(FFLAGS)
lahey_linux_mpi : FFLAGS_IRAD = $(FFLAGS)
lahey_linux_mpi : FFLAGS_MAIN = $(FFLAGS)
lahey_linux_mpi : FFLAGS_MASS = $(FFLAGS)
lahey_linux_mpi : FFLAGS_MESH = $(FFLAGS)
lahey_linux_mpi : FFLAGS_MPIP = $(FFLAGS)
lahey_linux_mpi : FFLAGS_MPIS = $(FFLAGS)
lahey_linux_mpi : FFLAGS_PART = $(FFLAGS)
lahey_linux_mpi : FFLAGS_POIS = $(FFLAGS)
lahey_linux_mpi : FFLAGS_PREC = $(FFLAGS)
lahey_linux_mpi : FFLAGS_PRES = $(FFLAGS)
lahey_linux_mpi : FFLAGS_RADI = $(FFLAGS)
lahey_linux_mpi : FFLAGS_READ = $(FFLAGS)
lahey_linux_mpi : FFLAGS_SCRC = $(FFLAGS)
lahey_linux_mpi : FFLAGS_SMVV = $(FFLAGS)
lahey_linux_mpi : FFLAGS_TURB = $(FFLAGS)
lahey_linux_mpi : FFLAGS_TYPE = $(FFLAGS)
lahey_linux_mpi : FFLAGS_VEGE = $(FFLAGS)
lahey_linux_mpi : FFLAGS_VELO = $(FFLAGS)
lahey_linux_mpi : FFLAGS_WALL = $(FFLAGS)
lahey_linux_mpi : FFLAGS_LINKER = $(FFLAGS)
lahey_linux_mpi : FCOMPL = hf77
lahey_linux_mpi : CCOMPL = gcc
lahey_linux_mpi : INCLUDEDIR = /usr/local/include
lahey_linux_mpi : obj = fds_mpi_lahey
lahey_linux_mpi : $(objects_mpi_linux)
	$(FCOMPL) $(FFLAGS_LINKER) $(LFLAGS) -o $(obj) $(objects_mpi_linux)

#*** Sun Solaris 10 f95 Compiler ***

f95_solaris10 : FFLAGS   = -O2 -m64 -Bstatic
f95_solaris10 : CFLAGS   = -O2 -m64
f95_solaris10 : FFLAGS_CONS = $(FFLAGS)
f95_solaris10 : FFLAGS_CTRL = $(FFLAGS)
f95_solaris10 : FFLAGS_DATA = $(FFLAGS)
f95_solaris10 : FFLAGS_DEVC = $(FFLAGS)
f95_solaris10 : FFLAGS_DIVG = $(FFLAGS)
f95_solaris10 : FFLAGS_DUMP = $(FFLAGS)
f95_solaris10 : FFLAGS_EVAC = $(FFLAGS)
f95_solaris10 : FFLAGS_FIRE = $(FFLAGS)
f95_solaris10 : FFLAGS_FUNC = $(FFLAGS)
f95_solaris10 : FFLAGS_HVAC = $(FFLAGS)
f95_solaris10 : FFLAGS_IEVA = $(FFLAGS)
f95_solaris10 : FFLAGS_INIT = $(FFLAGS)
f95_solaris10 : FFLAGS_IRAD = $(FFLAGS)
f95_solaris10 : FFLAGS_MAIN = $(FFLAGS)
f95_solaris10 : FFLAGS_MASS = $(FFLAGS)
f95_solaris10 : FFLAGS_MESH = $(FFLAGS)
f95_solaris10 : FFLAGS_MPIP = $(FFLAGS)
f95_solaris10 : FFLAGS_MPIS = $(FFLAGS)
f95_solaris10 : FFLAGS_PART = $(FFLAGS)
f95_solaris10 : FFLAGS_POIS = $(FFLAGS)
f95_solaris10 : FFLAGS_PREC = $(FFLAGS)
f95_solaris10 : FFLAGS_PRES = $(FFLAGS)
f95_solaris10 : FFLAGS_RADI = $(FFLAGS)
f95_solaris10 : FFLAGS_READ = $(FFLAGS)
f95_solaris10 : FFLAGS_SCRC = $(FFLAGS)
f95_solaris10 : FFLAGS_SMVV = $(FFLAGS)
f95_solaris10 : FFLAGS_TURB = $(FFLAGS)
f95_solaris10 : FFLAGS_TYPE = $(FFLAGS)
f95_solaris10 : FFLAGS_VEGE = $(FFLAGS)
f95_solaris10 : FFLAGS_VELO = $(FFLAGS)
f95_solaris10 : FFLAGS_WALL = $(FFLAGS)
f95_solaris10 : FFLAGS_LINKER = $(FFLAGS)
f95_solaris10 : FCOMPL   = f95
f95_solaris10 : CCOMPL   = cc
f95_solaris10 : obj = fds_solaris
f95_solaris10 : $(objects_serial_linux)
	$(FCOMPL) $(FFLAGS_LINKER) $(LFLAGS) -o $(obj) $(objects_serial_linux)

f95_solaris10_mpi : INC_FLAGS = -I$(OPT)/SUNWhpc/HPC7.0/include/amd64
f95_solaris10_mpi : LIB_FLAGS = -Bstatic -lfui -Bdynamic -L$(OPT)/SUNWspro/prod/lib/amd64 -L$(OPT)/SUNWhpc/HPC7.0/lib/amd64
f95_solaris10_mpi : FFLAGS = -m64 $(INC_FLAGS)
f95_solaris10_mpi : CFLAGS = -m64
f95_solaris10_mpi : FFLAGS_CONS = $(FFLAGS)
f95_solaris10_mpi : FFLAGS_CTRL = $(FFLAGS)
f95_solaris10_mpi : FFLAGS_DATA = $(FFLAGS)
f95_solaris10_mpi : FFLAGS_DEVC = $(FFLAGS)
f95_solaris10_mpi : FFLAGS_DIVG = $(FFLAGS)
f95_solaris10_mpi : FFLAGS_DUMP = $(FFLAGS)
f95_solaris10_mpi : FFLAGS_EVAC = $(FFLAGS)
f95_solaris10_mpi : FFLAGS_FIRE = $(FFLAGS)
f95_solaris10_mpi : FFLAGS_FUNC = $(FFLAGS)
f95_solaris10_mpi : FFLAGS_HVAC = $(FFLAGS)
f95_solaris10_mpi : FFLAGS_IEVA = $(FFLAGS)
f95_solaris10_mpi : FFLAGS_INIT = $(FFLAGS)
f95_solaris10_mpi : FFLAGS_IRAD = $(FFLAGS)
f95_solaris10_mpi : FFLAGS_MAIN = $(FFLAGS)
f95_solaris10_mpi : FFLAGS_MASS = $(FFLAGS)
f95_solaris10_mpi : FFLAGS_MESH = $(FFLAGS)
f95_solaris10_mpi : FFLAGS_MPIP = $(FFLAGS)
f95_solaris10_mpi : FFLAGS_MPIS = $(FFLAGS)
f95_solaris10_mpi : FFLAGS_PART = $(FFLAGS)
f95_solaris10_mpi : FFLAGS_POIS = $(FFLAGS)
f95_solaris10_mpi : FFLAGS_PREC = $(FFLAGS)
f95_solaris10_mpi : FFLAGS_PRES = $(FFLAGS)
f95_solaris10_mpi : FFLAGS_RADI = $(FFLAGS)
f95_solaris10_mpi : FFLAGS_READ = $(FFLAGS)
f95_solaris10_mpi : FFLAGS_SCRC = $(FFLAGS)
f95_solaris10_mpi : FFLAGS_SMVV = $(FFLAGS)
f95_solaris10_mpi : FFLAGS_TURB = $(FFLAGS)
f95_solaris10_mpi : FFLAGS_TYPE = $(FFLAGS)
f95_solaris10_mpi : FFLAGS_VEGE = $(FFLAGS)
f95_solaris10_mpi : FFLAGS_VELO = $(FFLAGS)
f95_solaris10_mpi : FFLAGS_WALL = $(FFLAGS)
f95_solaris10_mpi : FFLAGS_LINKER = $(FFLAGS)
f95_solaris10_mpi : FCOMPL = mpif90
f95_solaris10_mpi : CCOMPL = cc
f95_solaris10_mpi : obj = fds_mpi_solaris
f95_solaris10_mpi : $(objects_mpi_linux)
	$(FCOMPL) $(FFLAGS_LINKER) $(LFLAGS) -o $(obj) $(objects_serial_linux)

#*** Sun Solaris (SunOS 5.11) f95 Compiler - AMD64 Opteron(tm) Processor *** 

f95_solaris11 : FFLAGS   = -xarch=sse2a -m64 -xchip=native -Bstatic
f95_solaris11 : CFLAGS   = -xarch=sse2a -m64 -xchip=native
f95_solaris11 : FFLAGS_CONS = $(FFLAGS)
f95_solaris11 : FFLAGS_CTRL = $(FFLAGS)
f95_solaris11 : FFLAGS_DATA = $(FFLAGS)
f95_solaris11 : FFLAGS_DEVC = $(FFLAGS)
f95_solaris11 : FFLAGS_DIVG = $(FFLAGS)
f95_solaris11 : FFLAGS_DUMP = $(FFLAGS)
f95_solaris11 : FFLAGS_EVAC = $(FFLAGS)
f95_solaris11 : FFLAGS_FIRE = $(FFLAGS)
f95_solaris11 : FFLAGS_FUNC = $(FFLAGS)
f95_solaris11 : FFLAGS_HVAC = $(FFLAGS)
f95_solaris11 : FFLAGS_IEVA = $(FFLAGS)
f95_solaris11 : FFLAGS_INIT = $(FFLAGS)
f95_solaris11 : FFLAGS_IRAD = $(FFLAGS)
f95_solaris11 : FFLAGS_MAIN = $(FFLAGS)
f95_solaris11 : FFLAGS_MASS = $(FFLAGS)
f95_solaris11 : FFLAGS_MESH = $(FFLAGS)
f95_solaris11 : FFLAGS_MPIP = $(FFLAGS)
f95_solaris11 : FFLAGS_MPIS = $(FFLAGS)
f95_solaris11 : FFLAGS_PART = $(FFLAGS)
f95_solaris11 : FFLAGS_POIS = $(FFLAGS)
f95_solaris11 : FFLAGS_PREC = $(FFLAGS)
f95_solaris11 : FFLAGS_PRES = $(FFLAGS)
f95_solaris11 : FFLAGS_RADI = $(FFLAGS)
f95_solaris11 : FFLAGS_READ = $(FFLAGS)
f95_solaris11 : FFLAGS_SCRC = $(FFLAGS)
f95_solaris11 : FFLAGS_SMVV = $(FFLAGS)
f95_solaris11 : FFLAGS_TURB = $(FFLAGS)
f95_solaris11 : FFLAGS_TYPE = $(FFLAGS)
f95_solaris11 : FFLAGS_VEGE = $(FFLAGS)
f95_solaris11 : FFLAGS_VELO = $(FFLAGS)
f95_solaris11 : FFLAGS_WALL = $(FFLAGS)
f95_solaris11 : FFLAGS_LINKER = $(FFLAGS)
f95_solaris11 : FCOMPL   = f95
f95_solaris11 : CCOMPL   = cc
f95_solaris11 : obj = fds_solaris11
f95_solaris11 : $(objects_serial_linux)
	$(FCOMPL) $(FFLAGS_LINKER) $(LFLAGS) -o $(obj) $(objects_serial_linux)

f95_solaris11_mpi : INC_FLAGS=-I/opt/SUNWhpc/HPC8.2/sun/include/amd64 
f95_solaris11_mpi : LIB_FLAGS=-Bstatic -L/usr/lib/amd64/ld.so.1 -L/opt/sunstudio12.1/lib/amd64 -L/opt/SUNWhpc/HPC8.2/sun/lib/amd64
f95_solaris11_mpi : FFLAGS = -xarch=sse2a -m64 -xchip=native $(INC_FLAGS)
f95_solaris11_mpi : CFLAGS = -xarch=sse2a -m64 -xchip=native
f95_solaris11_mpi : FFLAGS_CONS = $(FFLAGS)
f95_solaris11_mpi : FFLAGS_CTRL = $(FFLAGS)
f95_solaris11_mpi : FFLAGS_DATA = $(FFLAGS)
f95_solaris11_mpi : FFLAGS_DEVC = $(FFLAGS)
f95_solaris11_mpi : FFLAGS_DIVG = $(FFLAGS)
f95_solaris11_mpi : FFLAGS_DUMP = $(FFLAGS)
f95_solaris11_mpi : FFLAGS_EVAC = $(FFLAGS)
f95_solaris11_mpi : FFLAGS_FIRE = $(FFLAGS)
f95_solaris11_mpi : FFLAGS_FUNC = $(FFLAGS)
f95_solaris11_mpi : FFLAGS_HVAC = $(FFLAGS)
f95_solaris11_mpi : FFLAGS_IEVA = $(FFLAGS)
f95_solaris11_mpi : FFLAGS_INIT = $(FFLAGS)
f95_solaris11_mpi : FFLAGS_IRAD = $(FFLAGS)
f95_solaris11_mpi : FFLAGS_MAIN = $(FFLAGS)
f95_solaris11_mpi : FFLAGS_MASS = $(FFLAGS)
f95_solaris11_mpi : FFLAGS_MESH = $(FFLAGS)
f95_solaris11_mpi : FFLAGS_MPIP = $(FFLAGS)
f95_solaris11_mpi : FFLAGS_MPIS = $(FFLAGS)
f95_solaris11_mpi : FFLAGS_PART = $(FFLAGS)
f95_solaris11_mpi : FFLAGS_POIS = $(FFLAGS)
f95_solaris11_mpi : FFLAGS_PREC = $(FFLAGS)
f95_solaris11_mpi : FFLAGS_PRES = $(FFLAGS)
f95_solaris11_mpi : FFLAGS_RADI = $(FFLAGS)
f95_solaris11_mpi : FFLAGS_READ = $(FFLAGS)
f95_solaris11_mpi : FFLAGS_SCRC = $(FFLAGS)
f95_solaris11_mpi : FFLAGS_SMVV = $(FFLAGS)
f95_solaris11_mpi : FFLAGS_TURB = $(FFLAGS)
f95_solaris11_mpi : FFLAGS_TYPE = $(FFLAGS)
f95_solaris11_mpi : FFLAGS_VEGE = $(FFLAGS)
f95_solaris11_mpi : FFLAGS_VELO = $(FFLAGS)
f95_solaris11_mpi : FFLAGS_WALL = $(FFLAGS)
f95_solaris11_mpi : FFLAGS_LINKER = $(FFLAGS)
f95_solaris11_mpi : FCOMPL = mpif90
f95_solaris11_mpi : CCOMPL = cc
f95_solaris11_mpi : obj = fds_mpi_solaris11
f95_solaris11_mpi : $(objects_mpi_linux)
	$(FCOMPL) $(FFLAGS_LINKER) $(LFLAGS) -o $(obj) $(objects_mpi_linux)

#*** Portland Group Compiler***

# AMD Opteron 64Bit PC
pgi_linux_64 : FFLAGS = -fast -tp k8-64 -Mstandard
pgi_linux_64 : CFLAGS = -fast -tp k8-64
pgi_linux_64 : FFLAGS_CONS = $(FFLAGS)
pgi_linux_64 : FFLAGS_CTRL = $(FFLAGS)
pgi_linux_64 : FFLAGS_DATA = $(FFLAGS)
pgi_linux_64 : FFLAGS_DEVC = $(FFLAGS)
pgi_linux_64 : FFLAGS_DIVG = $(FFLAGS)
pgi_linux_64 : FFLAGS_DUMP = $(FFLAGS)
pgi_linux_64 : FFLAGS_EVAC = $(FFLAGS)
pgi_linux_64 : FFLAGS_FIRE = $(FFLAGS)
pgi_linux_64 : FFLAGS_FUNC = $(FFLAGS)
pgi_linux_64 : FFLAGS_HVAC = $(FFLAGS)
pgi_linux_64 : FFLAGS_IEVA = $(FFLAGS)
pgi_linux_64 : FFLAGS_INIT = $(FFLAGS)
pgi_linux_64 : FFLAGS_IRAD = $(FFLAGS)
pgi_linux_64 : FFLAGS_MAIN = $(FFLAGS)
pgi_linux_64 : FFLAGS_MASS = $(FFLAGS)
pgi_linux_64 : FFLAGS_MESH = $(FFLAGS)
pgi_linux_64 : FFLAGS_MPIP = $(FFLAGS)
pgi_linux_64 : FFLAGS_MPIS = $(FFLAGS)
pgi_linux_64 : FFLAGS_PART = $(FFLAGS)
pgi_linux_64 : FFLAGS_POIS = $(FFLAGS)
pgi_linux_64 : FFLAGS_PREC = $(FFLAGS)
pgi_linux_64 : FFLAGS_PRES = $(FFLAGS)
pgi_linux_64 : FFLAGS_RADI = $(FFLAGS)
pgi_linux_64 : FFLAGS_READ = $(FFLAGS)
pgi_linux_64 : FFLAGS_SCRC = $(FFLAGS)
pgi_linux_64 : FFLAGS_SMVV = $(FFLAGS)
pgi_linux_64 : FFLAGS_TURB = $(FFLAGS)
pgi_linux_64 : FFLAGS_TYPE = $(FFLAGS)
pgi_linux_64 : FFLAGS_VEGE = $(FFLAGS)
pgi_linux_64 : FFLAGS_VELO = $(FFLAGS)
pgi_linux_64 : FFLAGS_WALL = $(FFLAGS)
pgi_linux_64 : FFLAGS_LINKER = $(FFLAGS)
pgi_linux_64 : FCOMPL = pgf90
pgi_linux_64 : CCOMPL = pgcc
pgi_linux_64 : LFLAGS  = -fast -tp k8-64 -byteswapio -Bstatic -lc -lgcc_eh
pgi_linux_64 : obj = fds_pgi_Opteron64
pgi_linux_64 : $(objects_serial_linux)
	$(FCOMPL) $(FFLAGS_LINKER) $(LFLAGS) -o $(obj) $(objects_serial_linux)

# AMD Opteron 64Bit PC
mpi_pgi_linux_64: FFLAGS = -fast -tp k8-64 -Mstandard
mpi_pgi_linux_64: CFLAGS = -fast -tp k8-64
mpi_pgi_linux_64 : FFLAGS_CONS = $(FFLAGS)
mpi_pgi_linux_64 : FFLAGS_CTRL = $(FFLAGS)
mpi_pgi_linux_64 : FFLAGS_DATA = $(FFLAGS)
mpi_pgi_linux_64 : FFLAGS_DEVC = $(FFLAGS)
mpi_pgi_linux_64 : FFLAGS_DIVG = $(FFLAGS)
mpi_pgi_linux_64 : FFLAGS_DUMP = $(FFLAGS)
mpi_pgi_linux_64 : FFLAGS_EVAC = $(FFLAGS)
mpi_pgi_linux_64 : FFLAGS_FIRE = $(FFLAGS)
mpi_pgi_linux_64 : FFLAGS_FUNC = $(FFLAGS)
mpi_pgi_linux_64 : FFLAGS_HVAC = $(FFLAGS)
mpi_pgi_linux_64 : FFLAGS_IEVA = $(FFLAGS)
mpi_pgi_linux_64 : FFLAGS_INIT = $(FFLAGS)
mpi_pgi_linux_64 : FFLAGS_IRAD = $(FFLAGS)
mpi_pgi_linux_64 : FFLAGS_MAIN = $(FFLAGS)
mpi_pgi_linux_64 : FFLAGS_MASS = $(FFLAGS)
mpi_pgi_linux_64 : FFLAGS_MESH = $(FFLAGS)
mpi_pgi_linux_64 : FFLAGS_MPIP = $(FFLAGS)
mpi_pgi_linux_64 : FFLAGS_MPIS = $(FFLAGS)
mpi_pgi_linux_64 : FFLAGS_PART = $(FFLAGS)
mpi_pgi_linux_64 : FFLAGS_POIS = $(FFLAGS)
mpi_pgi_linux_64 : FFLAGS_PREC = $(FFLAGS)
mpi_pgi_linux_64 : FFLAGS_PRES = $(FFLAGS)
mpi_pgi_linux_64 : FFLAGS_RADI = $(FFLAGS)
mpi_pgi_linux_64 : FFLAGS_READ = $(FFLAGS)
mpi_pgi_linux_64 : FFLAGS_SCRC = $(FFLAGS)
mpi_pgi_linux_64 : FFLAGS_SMVV = $(FFLAGS)
mpi_pgi_linux_64 : FFLAGS_TURB = $(FFLAGS)
mpi_pgi_linux_64 : FFLAGS_TYPE = $(FFLAGS)
mpi_pgi_linux_64 : FFLAGS_VEGE = $(FFLAGS)
mpi_pgi_linux_64 : FFLAGS_VELO = $(FFLAGS)
mpi_pgi_linux_64 : FFLAGS_WALL = $(FFLAGS)
mpi_pgi_linux_64 : FFLAGS_LINKER = $(FFLAGS)
mpi_pgi_linux_64: FCOMPL = mpif77
mpi_pgi_linux_64: CCOMPL = mpicc
mpi_pgi_linux_64: LFLAGS  = -fast -tp k8-64 -byteswapio -Bstatic -lc -lgcc_eh
mpi_pgi_linux_64: obj = fds_mpi_pgi_Opteron64
mpi_pgi_linux_64: $(objects_mpi_linux)
	$(FCOMPL) $(FFLAGS_LINKER) $(LFLAGS) -o $(obj) $(objects_mpi_linux)

#XLF-Compiler, IBM Power6 Core, OpenMP, full optimized settings
xlf_openmp : FFLAGS  = -O3 -qhot -q64 -qtune=pwr6 -qarch=pwr6 -qmaxmem=-1 -bdatapsize:64K -bstackpsize:64K -btextpsize:64K -qsmp=omp
xlf_openmp : CFLAGS  = -O3 -qhot -Dpp_noappend -q64 -qtune=pwr6 -qarch=pwr6 -qmaxmem=-1 -bdatapsize:64K -bstackpsize:64K -btextpsize:64K -qsmp=omp
xlf_openmp : FFLAGS_CONS = $(FFLAGS)
xlf_openmp : FFLAGS_CTRL = $(FFLAGS)
xlf_openmp : FFLAGS_DATA = $(FFLAGS)
xlf_openmp : FFLAGS_DEVC = $(FFLAGS)
xlf_openmp : FFLAGS_DIVG = $(FFLAGS)
xlf_openmp : FFLAGS_DUMP = $(FFLAGS)
xlf_openmp : FFLAGS_EVAC = $(FFLAGS)
xlf_openmp : FFLAGS_FIRE = $(FFLAGS)
xlf_openmp : FFLAGS_FUNC = $(FFLAGS)
xlf_openmp : FFLAGS_HVAC = $(FFLAGS)
xlf_openmp : FFLAGS_IEVA = $(FFLAGS)
xlf_openmp : FFLAGS_INIT = $(FFLAGS)
xlf_openmp : FFLAGS_IRAD = $(FFLAGS)
xlf_openmp : FFLAGS_MAIN = $(FFLAGS)
xlf_openmp : FFLAGS_MASS = $(FFLAGS)
xlf_openmp : FFLAGS_MESH = $(FFLAGS)
xlf_openmp : FFLAGS_MPIP = $(FFLAGS)
xlf_openmp : FFLAGS_MPIS = $(FFLAGS)
xlf_openmp : FFLAGS_PART = $(FFLAGS)
xlf_openmp : FFLAGS_POIS = $(FFLAGS)
xlf_openmp : FFLAGS_PREC = $(FFLAGS)
xlf_openmp : FFLAGS_PRES = $(FFLAGS)
xlf_openmp : FFLAGS_RADI = $(FFLAGS)
xlf_openmp : FFLAGS_READ = $(FFLAGS)
xlf_openmp : FFLAGS_SCRC = $(FFLAGS)
xlf_openmp : FFLAGS_SMVV = $(FFLAGS)
xlf_openmp : FFLAGS_TURB = $(FFLAGS)
xlf_openmp : FFLAGS_TYPE = $(FFLAGS)
xlf_openmp : FFLAGS_VEGE = $(FFLAGS)
xlf_openmp : FFLAGS_VELO = $(FFLAGS)
xlf_openmp : FFLAGS_WALL = $(FFLAGS)
xlf_openmp : FFLAGS_LINKER = $(FFLAGS)
xlf_openmp : FCOMPL  = xlf90_r
xlf_openmp : CCOMPL  = xlc_r
xlf_openmp : obj     = fds_xlf_openmp
xlf_openmp : $(objects_serial_linux)
	$(FCOMPL) $(FFLAGS_LINKER) $(LFLAGS) -o $(obj) $(objects_serial_linux)

#XLF-Compiler, IBM Power6 Core, OpenMP, non-optimized setting
xlf_openmp_nooptimization : FFLAGS  = -O0 -q64 -qsmp=omp
xlf_openmp_nooptimization : CFLAGS  = -O0 -Dpp_noappend -q64 -qsmp=omp
xlf_openmp_nooptimization : FFLAGS_CONS = $(FFLAGS)
xlf_openmp_nooptimization : FFLAGS_CTRL = $(FFLAGS)
xlf_openmp_nooptimization : FFLAGS_DATA = $(FFLAGS)
xlf_openmp_nooptimization : FFLAGS_DEVC = $(FFLAGS)
xlf_openmp_nooptimization : FFLAGS_DIVG = $(FFLAGS)
xlf_openmp_nooptimization : FFLAGS_DUMP = $(FFLAGS)
xlf_openmp_nooptimization : FFLAGS_EVAC = $(FFLAGS)
xlf_openmp_nooptimization : FFLAGS_FIRE = $(FFLAGS)
xlf_openmp_nooptimization : FFLAGS_FUNC = $(FFLAGS)
xlf_openmp_nooptimization : FFLAGS_HVAC = $(FFLAGS)
xlf_openmp_nooptimization : FFLAGS_IEVA = $(FFLAGS)
xlf_openmp_nooptimization : FFLAGS_INIT = $(FFLAGS)
xlf_openmp_nooptimization : FFLAGS_IRAD = $(FFLAGS)
xlf_openmp_nooptimization : FFLAGS_MAIN = $(FFLAGS)
xlf_openmp_nooptimization : FFLAGS_MASS = $(FFLAGS)
xlf_openmp_nooptimization : FFLAGS_MESH = $(FFLAGS)
xlf_openmp_nooptimization : FFLAGS_MPIP = $(FFLAGS)
xlf_openmp_nooptimization : FFLAGS_MPIS = $(FFLAGS)
xlf_openmp_nooptimization : FFLAGS_PART = $(FFLAGS)
xlf_openmp_nooptimization : FFLAGS_POIS = $(FFLAGS)
xlf_openmp_nooptimization : FFLAGS_PREC = $(FFLAGS)
xlf_openmp_nooptimization : FFLAGS_PRES = $(FFLAGS)
xlf_openmp_nooptimization : FFLAGS_RADI = $(FFLAGS)
xlf_openmp_nooptimization : FFLAGS_READ = $(FFLAGS)
xlf_openmp_nooptimization : FFLAGS_SCRC = $(FFLAGS)
xlf_openmp_nooptimization : FFLAGS_SMVV = $(FFLAGS)
xlf_openmp_nooptimization : FFLAGS_TURB = $(FFLAGS)
xlf_openmp_nooptimization : FFLAGS_TYPE = $(FFLAGS)
xlf_openmp_nooptimization : FFLAGS_VEGE = $(FFLAGS)
xlf_openmp_nooptimization : FFLAGS_VELO = $(FFLAGS)
xlf_openmp_nooptimization : FFLAGS_WALL = $(FFLAGS)
xlf_openmp_nooptimization : FFLAGS_LINKER = $(FFLAGS)
xlf_openmp_nooptimization : FCOMPL  = xlf90_r
xlf_openmp_nooptimization : CCOMPL  = xlc_r
xlf_openmp_nooptimization : obj     = fds_xlf_openmp_nooptimization
xlf_openmp_nooptimization : $(objects_serial_linux)
	$(FCOMPL) $(FFLAGS_LINKER) $(LFLAGS) -o $(obj) $(objects_serial_linux)

#AIX, JUMP, MPI-Version
aix_mpi : FFLAGS  = -O3 -q64
aix_mpi : CFLAGS  = -O3 -Dpp_noappend -q64
aix_mpi : FFLAGS_CONS = $(FFLAGS)
aix_mpi : FFLAGS_CTRL = $(FFLAGS)
aix_mpi : FFLAGS_DATA = $(FFLAGS)
aix_mpi : FFLAGS_DEVC = $(FFLAGS)
aix_mpi : FFLAGS_DIVG = $(FFLAGS)
aix_mpi : FFLAGS_DUMP = $(FFLAGS)
aix_mpi : FFLAGS_EVAC = $(FFLAGS)
aix_mpi : FFLAGS_FIRE = $(FFLAGS)
aix_mpi : FFLAGS_FUNC = $(FFLAGS)
aix_mpi : FFLAGS_HVAC = $(FFLAGS)
aix_mpi : FFLAGS_IEVA = $(FFLAGS)
aix_mpi : FFLAGS_INIT = $(FFLAGS)
aix_mpi : FFLAGS_IRAD = $(FFLAGS)
aix_mpi : FFLAGS_MAIN = $(FFLAGS)
aix_mpi : FFLAGS_MASS = $(FFLAGS)
aix_mpi : FFLAGS_MESH = $(FFLAGS)
aix_mpi : FFLAGS_MPIP = $(FFLAGS)
aix_mpi : FFLAGS_MPIS = $(FFLAGS)
aix_mpi : FFLAGS_PART = $(FFLAGS)
aix_mpi : FFLAGS_POIS = $(FFLAGS)
aix_mpi : FFLAGS_PREC = $(FFLAGS)
aix_mpi : FFLAGS_PRES = $(FFLAGS)
aix_mpi : FFLAGS_RADI = $(FFLAGS)
aix_mpi : FFLAGS_READ = $(FFLAGS)
aix_mpi : FFLAGS_SCRC = $(FFLAGS)
aix_mpi : FFLAGS_SMVV = $(FFLAGS)
aix_mpi : FFLAGS_TURB = $(FFLAGS)
aix_mpi : FFLAGS_TYPE = $(FFLAGS)
aix_mpi : FFLAGS_VEGE = $(FFLAGS)
aix_mpi : FFLAGS_VELO = $(FFLAGS)
aix_mpi : FFLAGS_WALL = $(FFLAGS)
aix_mpi : FFLAGS_LINKER = $(FFLAGS)
aix_mpi : FCOMPL  = mpxlf90
aix_mpi : CCOMPL  = mpcc
aix_mpi : obj     = fds_jump_mpi_64
aix_mpi : $(objects_mpi_linux)
	$(FCOMPL) $(FFLAGS_LINKER) $(LFLAGS) -o $(obj) $(objects_mpi_linux)

#*** GNU Compilers ***

#GCC and gfortran Version

gnu_win_32 : FFLAGS  = -O1 -ffree-line-length-none -ffree-form
gnu_win_32 : CFLAGS  = -O1
gnu_win_32 : FFLAGS_CONS = $(FFLAGS)
gnu_win_32 : FFLAGS_CTRL = $(FFLAGS)
gnu_win_32 : FFLAGS_DATA = $(FFLAGS)
gnu_win_32 : FFLAGS_DEVC = $(FFLAGS)
gnu_win_32 : FFLAGS_DIVG = $(FFLAGS)
gnu_win_32 : FFLAGS_DUMP = $(FFLAGS)
gnu_win_32 : FFLAGS_EVAC = $(FFLAGS)
gnu_win_32 : FFLAGS_FIRE = $(FFLAGS)
gnu_win_32 : FFLAGS_FUNC = $(FFLAGS)
gnu_win_32 : FFLAGS_HVAC = $(FFLAGS)
gnu_win_32 : FFLAGS_IEVA = $(FFLAGS)
gnu_win_32 : FFLAGS_INIT = $(FFLAGS)
gnu_win_32 : FFLAGS_IRAD = $(FFLAGS)
gnu_win_32 : FFLAGS_MAIN = $(FFLAGS)
gnu_win_32 : FFLAGS_MASS = $(FFLAGS)
gnu_win_32 : FFLAGS_MESH = $(FFLAGS)
gnu_win_32 : FFLAGS_MPIP = $(FFLAGS)
gnu_win_32 : FFLAGS_MPIS = $(FFLAGS)
gnu_win_32 : FFLAGS_PART = $(FFLAGS)
gnu_win_32 : FFLAGS_POIS = $(FFLAGS)
gnu_win_32 : FFLAGS_PREC = $(FFLAGS)
gnu_win_32 : FFLAGS_PRES = $(FFLAGS)
gnu_win_32 : FFLAGS_RADI = $(FFLAGS)
gnu_win_32 : FFLAGS_READ = $(FFLAGS)
gnu_win_32 : FFLAGS_SCRC = $(FFLAGS)
gnu_win_32 : FFLAGS_SMVV = $(FFLAGS)
gnu_win_32 : FFLAGS_TURB = $(FFLAGS)
gnu_win_32 : FFLAGS_TYPE = $(FFLAGS)
gnu_win_32 : FFLAGS_VEGE = $(FFLAGS)
gnu_win_32 : FFLAGS_VELO = $(FFLAGS)
gnu_win_32 : FFLAGS_WALL = $(FFLAGS)
gnu_win_32 : FFLAGS_LINKER = $(FFLAGS)
gnu_win_32 : FCOMPL  = gfortran
gnu_win_32 : CCOMPL  = gcc
gnu_win_32 : obj     = fds_gnu_win_32
gnu_win_32 : $(objects_serial_linux)
	$(FCOMPL) $(FFLAGS_LINKER) $(LFLAGS) -o $(obj) $(objects_serial_linux)

gnu_linux_32 : FFLAGS  = -O1 -ffree-line-length-none -ffree-form
gnu_linux_32 : CFLAGS  = -O1
gnu_linux_32 : FFLAGS_CONS = $(FFLAGS)
gnu_linux_32 : FFLAGS_CTRL = $(FFLAGS)
gnu_linux_32 : FFLAGS_DATA = $(FFLAGS)
gnu_linux_32 : FFLAGS_DEVC = $(FFLAGS)
gnu_linux_32 : FFLAGS_DIVG = $(FFLAGS)
gnu_linux_32 : FFLAGS_DUMP = $(FFLAGS)
gnu_linux_32 : FFLAGS_EVAC = $(FFLAGS)
gnu_linux_32 : FFLAGS_FIRE = $(FFLAGS)
gnu_linux_32 : FFLAGS_FUNC = $(FFLAGS)
gnu_linux_32 : FFLAGS_HVAC = $(FFLAGS)
gnu_linux_32 : FFLAGS_IEVA = $(FFLAGS)
gnu_linux_32 : FFLAGS_INIT = $(FFLAGS)
gnu_linux_32 : FFLAGS_IRAD = $(FFLAGS)
gnu_linux_32 : FFLAGS_MAIN = $(FFLAGS)
gnu_linux_32 : FFLAGS_MASS = $(FFLAGS)
gnu_linux_32 : FFLAGS_MESH = $(FFLAGS)
gnu_linux_32 : FFLAGS_MPIP = $(FFLAGS)
gnu_linux_32 : FFLAGS_MPIS = $(FFLAGS)
gnu_linux_32 : FFLAGS_PART = $(FFLAGS)
gnu_linux_32 : FFLAGS_POIS = $(FFLAGS)
gnu_linux_32 : FFLAGS_PREC = $(FFLAGS)
gnu_linux_32 : FFLAGS_PRES = $(FFLAGS)
gnu_linux_32 : FFLAGS_RADI = $(FFLAGS)
gnu_linux_32 : FFLAGS_READ = $(FFLAGS)
gnu_linux_32 : FFLAGS_SCRC = $(FFLAGS)
gnu_linux_32 : FFLAGS_SMVV = $(FFLAGS)
gnu_linux_32 : FFLAGS_TURB = $(FFLAGS)
gnu_linux_32 : FFLAGS_TYPE = $(FFLAGS)
gnu_linux_32 : FFLAGS_VEGE = $(FFLAGS)
gnu_linux_32 : FFLAGS_VELO = $(FFLAGS)
gnu_linux_32 : FFLAGS_WALL = $(FFLAGS)
gnu_linux_32 : FFLAGS_LINKER = $(FFLAGS)
gnu_linux_32 : FCOMPL  = gfortran
gnu_linux_32 : CCOMPL  = gcc
gnu_linux_32 : obj     = fds_gnu_linux_32
gnu_linux_32 : $(objects_serial_linux)
	$(FCOMPL) $(FFLAGS_LINKER) $(LFLAGS) -o $(obj) $(objects_serial_linux)

gnu_mpi_32 : FFLAGS  = -O1
gnu_mpi_32 : CFLAGS  = -O1
gnu_mpi_32 : FFLAGS_CONS = $(FFLAGS)
gnu_mpi_32 : FFLAGS_CTRL = $(FFLAGS)
gnu_mpi_32 : FFLAGS_DATA = $(FFLAGS)
gnu_mpi_32 : FFLAGS_DEVC = $(FFLAGS)
gnu_mpi_32 : FFLAGS_DIVG = $(FFLAGS)
gnu_mpi_32 : FFLAGS_DUMP = $(FFLAGS)
gnu_mpi_32 : FFLAGS_EVAC = $(FFLAGS)
gnu_mpi_32 : FFLAGS_FIRE = $(FFLAGS)
gnu_mpi_32 : FFLAGS_FUNC = $(FFLAGS)
gnu_mpi_32 : FFLAGS_HVAC = $(FFLAGS)
gnu_mpi_32 : FFLAGS_IEVA = $(FFLAGS)
gnu_mpi_32 : FFLAGS_INIT = $(FFLAGS)
gnu_mpi_32 : FFLAGS_IRAD = $(FFLAGS)
gnu_mpi_32 : FFLAGS_MAIN = $(FFLAGS)
gnu_mpi_32 : FFLAGS_MASS = $(FFLAGS)
gnu_mpi_32 : FFLAGS_MESH = $(FFLAGS)
gnu_mpi_32 : FFLAGS_MPIP = $(FFLAGS)
gnu_mpi_32 : FFLAGS_MPIS = $(FFLAGS)
gnu_mpi_32 : FFLAGS_PART = $(FFLAGS)
gnu_mpi_32 : FFLAGS_POIS = $(FFLAGS)
gnu_mpi_32 : FFLAGS_PREC = $(FFLAGS)
gnu_mpi_32 : FFLAGS_PRES = $(FFLAGS)
gnu_mpi_32 : FFLAGS_RADI = $(FFLAGS)
gnu_mpi_32 : FFLAGS_READ = $(FFLAGS)
gnu_mpi_32 : FFLAGS_SCRC = $(FFLAGS)
gnu_mpi_32 : FFLAGS_SMVV = $(FFLAGS)
gnu_mpi_32 : FFLAGS_TURB = $(FFLAGS)
gnu_mpi_32 : FFLAGS_TYPE = $(FFLAGS)
gnu_mpi_32 : FFLAGS_VEGE = $(FFLAGS)
gnu_mpi_32 : FFLAGS_VELO = $(FFLAGS)
gnu_mpi_32 : FFLAGS_WALL = $(FFLAGS)
gnu_mpi_32 : FFLAGS_LINKER = $(FFLAGS)
gnu_mpi_32 : FCOMPL  = mpif90
gnu_mpi_32 : CCOMPL  = mpicc
gnu_mpi_32 : obj = fds_gnu_mpi_32
gnu_mpi_32 : $(objects_mpi_linux)
	$(FCOMPL) $(FFLAGS_LINKER) $(LFLAGS) -o $(obj) $(objects_mpi_linux)

gnu_linux_64 : FFLAGS = -O3 -unroll -static -frecord-marker=4
gnu_linux_64 : CFLAGS = -O3 -unroll -static
gnu_linux_64 : FFLAGS_CONS = $(FFLAGS)
gnu_linux_64 : FFLAGS_CTRL = $(FFLAGS)
gnu_linux_64 : FFLAGS_DATA = $(FFLAGS)
gnu_linux_64 : FFLAGS_DEVC = $(FFLAGS)
gnu_linux_64 : FFLAGS_DIVG = $(FFLAGS)
gnu_linux_64 : FFLAGS_DUMP = $(FFLAGS)
gnu_linux_64 : FFLAGS_EVAC = $(FFLAGS)
gnu_linux_64 : FFLAGS_FIRE = $(FFLAGS)
gnu_linux_64 : FFLAGS_FUNC = $(FFLAGS)
gnu_linux_64 : FFLAGS_HVAC = $(FFLAGS)
gnu_linux_64 : FFLAGS_IEVA = $(FFLAGS)
gnu_linux_64 : FFLAGS_INIT = $(FFLAGS)
gnu_linux_64 : FFLAGS_IRAD = $(FFLAGS)
gnu_linux_64 : FFLAGS_MAIN = $(FFLAGS)
gnu_linux_64 : FFLAGS_MASS = $(FFLAGS)
gnu_linux_64 : FFLAGS_MESH = $(FFLAGS)
gnu_linux_64 : FFLAGS_MPIP = $(FFLAGS)
gnu_linux_64 : FFLAGS_MPIS = $(FFLAGS)
gnu_linux_64 : FFLAGS_PART = $(FFLAGS)
gnu_linux_64 : FFLAGS_POIS = $(FFLAGS)
gnu_linux_64 : FFLAGS_PREC = $(FFLAGS)
gnu_linux_64 : FFLAGS_PRES = $(FFLAGS)
gnu_linux_64 : FFLAGS_RADI = $(FFLAGS)
gnu_linux_64 : FFLAGS_READ = $(FFLAGS)
gnu_linux_64 : FFLAGS_SCRC = $(FFLAGS)
gnu_linux_64 : FFLAGS_SMVV = $(FFLAGS)
gnu_linux_64 : FFLAGS_TURB = $(FFLAGS)
gnu_linux_64 : FFLAGS_TYPE = $(FFLAGS)
gnu_linux_64 : FFLAGS_VEGE = $(FFLAGS)
gnu_linux_64 : FFLAGS_VELO = $(FFLAGS)
gnu_linux_64 : FFLAGS_WALL = $(FFLAGS)
gnu_linux_64 : FFLAGS_LINKER = $(FFLAGS)
gnu_linux_64 : FCOMPL = gfortran
gnu_linux_64 : CCOMPL = gcc
gnu_linux_64 : obj = fds_gnu_linux_64
gnu_linux_64 : $(objects_serial_linux)
	$(FCOMPL) $(FFLAGS_LINKER) $(LFLAGS) -o $(obj) $(objects_serial_linux)

xxxmpi_gnu_linux_64 : FFLAGS = -O3 -unroll -static -frecord-marker=4
xxxmpi_gnu_linux_64 : CFLAGS = -O3 -unroll -static
xxxmpi_gnu_linux_64 : FFLAGS_CONS = $(FFLAGS)
xxxmpi_gnu_linux_64 : FFLAGS_CTRL = $(FFLAGS)
xxxmpi_gnu_linux_64 : FFLAGS_DATA = $(FFLAGS)
xxxmpi_gnu_linux_64 : FFLAGS_DEVC = $(FFLAGS)
xxxmpi_gnu_linux_64 : FFLAGS_DIVG = $(FFLAGS)
xxxmpi_gnu_linux_64 : FFLAGS_DUMP = $(FFLAGS)
xxxmpi_gnu_linux_64 : FFLAGS_EVAC = $(FFLAGS)
xxxmpi_gnu_linux_64 : FFLAGS_FIRE = $(FFLAGS)
xxxmpi_gnu_linux_64 : FFLAGS_FUNC = $(FFLAGS)
xxxmpi_gnu_linux_64 : FFLAGS_HVAC = $(FFLAGS)
xxxmpi_gnu_linux_64 : FFLAGS_IEVA = $(FFLAGS)
xxxmpi_gnu_linux_64 : FFLAGS_INIT = $(FFLAGS)
xxxmpi_gnu_linux_64 : FFLAGS_IRAD = $(FFLAGS)
xxxmpi_gnu_linux_64 : FFLAGS_MAIN = $(FFLAGS)
xxxmpi_gnu_linux_64 : FFLAGS_MASS = $(FFLAGS)
xxxmpi_gnu_linux_64 : FFLAGS_MESH = $(FFLAGS)
xxxmpi_gnu_linux_64 : FFLAGS_MPIP = $(FFLAGS)
xxxmpi_gnu_linux_64 : FFLAGS_MPIS = $(FFLAGS)
xxxmpi_gnu_linux_64 : FFLAGS_PART = $(FFLAGS)
xxxmpi_gnu_linux_64 : FFLAGS_POIS = $(FFLAGS)
xxxmpi_gnu_linux_64 : FFLAGS_PREC = $(FFLAGS)
xxxmpi_gnu_linux_64 : FFLAGS_PRES = $(FFLAGS)
xxxmpi_gnu_linux_64 : FFLAGS_RADI = $(FFLAGS)
xxxmpi_gnu_linux_64 : FFLAGS_READ = $(FFLAGS)
xxxmpi_gnu_linux_64 : FFLAGS_SCRC = $(FFLAGS)
xxxmpi_gnu_linux_64 : FFLAGS_SMVV = $(FFLAGS)
xxxmpi_gnu_linux_64 : FFLAGS_TURB = $(FFLAGS)
xxxmpi_gnu_linux_64 : FFLAGS_TYPE = $(FFLAGS)
xxxmpi_gnu_linux_64 : FFLAGS_VEGE = $(FFLAGS)
xxxmpi_gnu_linux_64 : FFLAGS_VELO = $(FFLAGS)
xxxmpi_gnu_linux_64 : FFLAGS_WALL = $(FFLAGS)
xxxmpi_gnu_linux_64 : FFLAGS_LINKER = $(FFLAGS)
xxxmpi_gnu_linux_64 : FCOMPL = mpif77
xxxmpi_gnu_linux_64 : CCOMPL = mpicc
xxxmpi_gnu_linux_64 : obj = fds_mpi_gnu_linux_64
xxxmpi_gnu_linux_64 : $(objects_mpi_linux)

mpi_gnu_linux_64 : FFLAGS = -m64 -O2 -unroll
mpi_gnu_linux_64 : CFLAGS = -m64 -O2 -unroll
mpi_gnu_linux_64 : FFLAGS_CONS = $(FFLAGS)
mpi_gnu_linux_64 : FFLAGS_CTRL = $(FFLAGS)
mpi_gnu_linux_64 : FFLAGS_DATA = $(FFLAGS)
mpi_gnu_linux_64 : FFLAGS_DEVC = $(FFLAGS)
mpi_gnu_linux_64 : FFLAGS_DIVG = $(FFLAGS)
mpi_gnu_linux_64 : FFLAGS_DUMP = $(FFLAGS)
mpi_gnu_linux_64 : FFLAGS_EVAC = $(FFLAGS)
mpi_gnu_linux_64 : FFLAGS_FIRE = $(FFLAGS)
mpi_gnu_linux_64 : FFLAGS_FUNC = $(FFLAGS)
mpi_gnu_linux_64 : FFLAGS_HVAC = $(FFLAGS)
mpi_gnu_linux_64 : FFLAGS_IEVA = $(FFLAGS)
mpi_gnu_linux_64 : FFLAGS_INIT = $(FFLAGS)
mpi_gnu_linux_64 : FFLAGS_IRAD = $(FFLAGS)
mpi_gnu_linux_64 : FFLAGS_MAIN = $(FFLAGS)
mpi_gnu_linux_64 : FFLAGS_MASS = $(FFLAGS)
mpi_gnu_linux_64 : FFLAGS_MESH = $(FFLAGS)
mpi_gnu_linux_64 : FFLAGS_MPIP = $(FFLAGS)
mpi_gnu_linux_64 : FFLAGS_MPIS = $(FFLAGS)
mpi_gnu_linux_64 : FFLAGS_PART = $(FFLAGS)
mpi_gnu_linux_64 : FFLAGS_POIS = $(FFLAGS)
mpi_gnu_linux_64 : FFLAGS_PREC = $(FFLAGS)
mpi_gnu_linux_64 : FFLAGS_PRES = $(FFLAGS)
mpi_gnu_linux_64 : FFLAGS_RADI = $(FFLAGS)
mpi_gnu_linux_64 : FFLAGS_READ = $(FFLAGS)
mpi_gnu_linux_64 : FFLAGS_SCRC = $(FFLAGS)
mpi_gnu_linux_64 : FFLAGS_SMVV = $(FFLAGS)
mpi_gnu_linux_64 : FFLAGS_TURB = $(FFLAGS)
mpi_gnu_linux_64 : FFLAGS_TYPE = $(FFLAGS)
mpi_gnu_linux_64 : FFLAGS_VEGE = $(FFLAGS)
mpi_gnu_linux_64 : FFLAGS_VELO = $(FFLAGS)
mpi_gnu_linux_64 : FFLAGS_WALL = $(FFLAGS)
mpi_gnu_linux_64 : FFLAGS_LINKER = $(FFLAGS)
mpi_gnu_linux_64 : FCOMPL = mpif77
mpi_gnu_linux_64 : CCOMPL = mpicc
mpi_gnu_linux_64 : obj = fds_mpi_gnu_linux_64
mpi_gnu_linux_64 : $(objects_mpi_linux) 
	$(FCOMPL) $(FFLAGS_LINKER) $(LFLAGS) -o $(obj) $(objects_mpi_linux)


mpi_gnu_osx_32_db : FFLAGS = -O0 -ffree-line-length-256 -g -Wall -Wsurprising -W
mpi_gnu_osx_32_db : CFLAGS = -O0 -D pp_OSX
mpi_gnu_osx_32_db : FFLAGS_CONS = $(FFLAGS)
mpi_gnu_osx_32_db : FFLAGS_CTRL = $(FFLAGS)
mpi_gnu_osx_32_db : FFLAGS_DATA = $(FFLAGS)
mpi_gnu_osx_32_db : FFLAGS_DEVC = $(FFLAGS)
mpi_gnu_osx_32_db : FFLAGS_DIVG = $(FFLAGS)
mpi_gnu_osx_32_db : FFLAGS_DUMP = $(FFLAGS)
mpi_gnu_osx_32_db : FFLAGS_EVAC = $(FFLAGS)
mpi_gnu_osx_32_db : FFLAGS_FIRE = $(FFLAGS)
mpi_gnu_osx_32_db : FFLAGS_FUNC = $(FFLAGS)
mpi_gnu_osx_32_db : FFLAGS_HVAC = $(FFLAGS)
mpi_gnu_osx_32_db : FFLAGS_IEVA = $(FFLAGS)
mpi_gnu_osx_32_db : FFLAGS_INIT = $(FFLAGS)
mpi_gnu_osx_32_db : FFLAGS_IRAD = $(FFLAGS)
mpi_gnu_osx_32_db : FFLAGS_MAIN = $(FFLAGS)
mpi_gnu_osx_32_db : FFLAGS_MASS = $(FFLAGS)
mpi_gnu_osx_32_db : FFLAGS_MESH = $(FFLAGS)
mpi_gnu_osx_32_db : FFLAGS_MPIP = $(FFLAGS)
mpi_gnu_osx_32_db : FFLAGS_MPIS = $(FFLAGS)
mpi_gnu_osx_32_db : FFLAGS_PART = $(FFLAGS)
mpi_gnu_osx_32_db : FFLAGS_POIS = $(FFLAGS)
mpi_gnu_osx_32_db : FFLAGS_PREC = $(FFLAGS)
mpi_gnu_osx_32_db : FFLAGS_PRES = $(FFLAGS)
mpi_gnu_osx_32_db : FFLAGS_RADI = $(FFLAGS)
mpi_gnu_osx_32_db : FFLAGS_READ = $(FFLAGS)
mpi_gnu_osx_32_db : FFLAGS_SCRC = $(FFLAGS)
mpi_gnu_osx_32_db : FFLAGS_SMVV = $(FFLAGS)
mpi_gnu_osx_32_db : FFLAGS_TURB = $(FFLAGS)
mpi_gnu_osx_32_db : FFLAGS_TYPE = $(FFLAGS)
mpi_gnu_osx_32_db : FFLAGS_VEGE = $(FFLAGS)
mpi_gnu_osx_32_db : FFLAGS_VELO = $(FFLAGS)
mpi_gnu_osx_32_db : FFLAGS_WALL = $(FFLAGS)
mpi_gnu_osx_32_db : FFLAGS_LINKER = $(FFLAGS)
mpi_gnu_osx_32_db : FCOMPL = mpif90
mpi_gnu_osx_32_db : CCOMPL = mpicc
mpi_gnu_osx_32_db : obj = fds_mpi_gnu_osx_32_db
mpi_gnu_osx_32_db : $(objects_mpi_linux)
	$(FCOMPL) $(FFLAGS_LINKER) $(LFLAGS) -o $(obj) $(objects_mpi_linux)

mpi_gnu_osx_32 : FFLAGS = -O2 -ffree-line-length-256
mpi_gnu_osx_32 : CFLAGS = -O2 -D pp_OSX
mpi_gnu_osx_32 : FFLAGS_CONS = $(FFLAGS)
mpi_gnu_osx_32 : FFLAGS_CTRL = $(FFLAGS)
mpi_gnu_osx_32 : FFLAGS_DATA = $(FFLAGS)
mpi_gnu_osx_32 : FFLAGS_DEVC = $(FFLAGS)
mpi_gnu_osx_32 : FFLAGS_DIVG = $(FFLAGS)
mpi_gnu_osx_32 : FFLAGS_DUMP = $(FFLAGS)
mpi_gnu_osx_32 : FFLAGS_EVAC = $(FFLAGS)
mpi_gnu_osx_32 : FFLAGS_FIRE = $(FFLAGS)
mpi_gnu_osx_32 : FFLAGS_FUNC = $(FFLAGS)
mpi_gnu_osx_32 : FFLAGS_HVAC = $(FFLAGS)
mpi_gnu_osx_32 : FFLAGS_IEVA = $(FFLAGS)
mpi_gnu_osx_32 : FFLAGS_INIT = $(FFLAGS)
mpi_gnu_osx_32 : FFLAGS_IRAD = $(FFLAGS)
mpi_gnu_osx_32 : FFLAGS_MAIN = $(FFLAGS)
mpi_gnu_osx_32 : FFLAGS_MASS = $(FFLAGS)
mpi_gnu_osx_32 : FFLAGS_MESH = $(FFLAGS)
mpi_gnu_osx_32 : FFLAGS_MPIP = $(FFLAGS)
mpi_gnu_osx_32 : FFLAGS_MPIS = $(FFLAGS)
mpi_gnu_osx_32 : FFLAGS_PART = $(FFLAGS)
mpi_gnu_osx_32 : FFLAGS_POIS = $(FFLAGS)
mpi_gnu_osx_32 : FFLAGS_PREC = $(FFLAGS)
mpi_gnu_osx_32 : FFLAGS_PRES = $(FFLAGS)
mpi_gnu_osx_32 : FFLAGS_RADI = $(FFLAGS)
mpi_gnu_osx_32 : FFLAGS_READ = $(FFLAGS)
mpi_gnu_osx_32 : FFLAGS_SCRC = $(FFLAGS)
mpi_gnu_osx_32 : FFLAGS_SMVV = $(FFLAGS)
mpi_gnu_osx_32 : FFLAGS_TURB = $(FFLAGS)
mpi_gnu_osx_32 : FFLAGS_TYPE = $(FFLAGS)
mpi_gnu_osx_32 : FFLAGS_VEGE = $(FFLAGS)
mpi_gnu_osx_32 : FFLAGS_VELO = $(FFLAGS)
mpi_gnu_osx_32 : FFLAGS_WALL = $(FFLAGS)
mpi_gnu_osx_32 : FFLAGS_LINKER = $(FFLAGS)
mpi_gnu_osx_32 : FCOMPL = mpif90
mpi_gnu_osx_32 : CCOMPL = mpicc
mpi_gnu_osx_32 : obj = fds_mpi_gnu_osx_32
mpi_gnu_osx_32 : $(objects_mpi_linux)
	$(FCOMPL) $(FFLAGS_LINKER) $(LFLAGS) -o $(obj) $(objects_mpi_linux)


#*** End Compiler Specific Rules ***

# *** Object Dependencies ***

# *** Object dependencies for Linux ***
prec.o : prec.f90
	$(FCOMPL) -c $(FFLAGS_PREC) $<
isob.o : isob.c
	$(CCOMPL) -c $(CFLAGS) $<
smvv.o : smvv.f90 isob.c
	$(FCOMPL) -c $(FFLAGS_SMVV) $<
cons.o : cons.f90 prec.f90
	$(FCOMPL) -c $(FFLAGS_CONS) $<
mpis.o : mpis.f90 prec.f90
	$(FCOMPL) -c $(FFLAGS_MPIS) $<
mpip.o : mpip.f90
	$(FCOMPL) -c $(FFLAGS_MPIP) $<
type.o : type.f90 prec.f90 cons.f90
	$(FCOMPL) -c $(FFLAGS_TYPE) $<
devc.o : devc.f90 prec.f90
	$(FCOMPL) -c $(FFLAGS_DEVC) $<
pois.o : pois.f90 prec.f90 cons.f90
	$(FCOMPL) -c $(FFLAGS_POIS) $<
mesh.o : mesh.f90 prec.f90 type.f90
	$(FCOMPL) -c $(FFLAGS_MESH) $<
data.o : data.f90 prec.f90 type.f90 func.f90 cons.f90 mesh.f90
	$(FCOMPL) -c $(FFLAGS_DATA) $<
func.o : func.f90 prec.f90 cons.f90 type.f90 mesh.f90 devc.f90
	$(FCOMPL) -c $(FFLAGS_FUNC) $<
ctrl.o : ctrl.f90 prec.f90 cons.f90 type.f90 mesh.f90 func.f90
	$(FCOMPL) -c $(FFLAGS_CTRL) $<
turb.o : turb.f90 func.f90 prec.f90 cons.f90 mesh.f90
	$(FCOMPL) -c $(FFLAGS_TURB) $<
scrc.o : scrc.f90 prec.f90 cons.f90 mesh.f90 func.f90 pois.f90
	$(FCOMPL) -c $(FFLAGS_SCRC) $<
irad.o : irad.f90 func.f90 prec.f90 cons.f90 type.f90 mesh.f90
	$(FCOMPL) -c $(FFLAGS_IRAD) $<
ieva.o : ieva.f90 func.f90 prec.f90 cons.f90 type.f90 mesh.f90
	$(FCOMPL) -c $(FFLAGS_IEVA) $<
fire.o : fire.f90 func.f90 prec.f90 cons.f90 type.f90 mesh.f90
	$(FCOMPL) -c $(FFLAGS_FIRE) $<
hvac.o : hvac.f90 func.f90 prec.f90 cons.f90 type.f90 mesh.f90 ctrl.f90
	$(FCOMPL) -c $(FFLAGS_HVAC) $<
wall.o : wall.f90 func.f90 prec.f90 cons.f90 type.f90 mesh.f90 hvac.f90
	$(FCOMPL) -c $(FFLAGS_WALL) $<
velo.o : velo.f90 func.f90 prec.f90 cons.f90 type.f90 mesh.f90 turb.f90
	$(FCOMPL) -c $(FFLAGS_VELO) $<
evac.o : evac.f90 func.f90 prec.f90 cons.f90 type.f90 mesh.f90 ieva.f90 data.f90
	$(FCOMPL) -c $(FFLAGS_EVAC) $<
divg.o : divg.f90 func.f90 prec.f90 cons.f90 type.f90 mesh.f90 scrc.f90 evac.f90
	$(FCOMPL) -c $(FFLAGS_DIVG) $<
mass.o : mass.f90 func.f90 prec.f90 cons.f90 type.f90 mesh.f90 turb.f90
	$(FCOMPL) -c $(FFLAGS_MASS) $<
radi.o : radi.f90 func.f90 prec.f90 cons.f90 type.f90 mesh.f90 irad.f90
	$(FCOMPL) -c $(FFLAGS_RADI) $<
pres.o : pres.f90 func.f90 prec.f90 cons.f90 type.f90 mesh.f90 pois.f90 velo.f90 scrc.f90
	$(FCOMPL) -c $(FFLAGS_PRES) $<
part.o : part.f90 func.f90 prec.f90 cons.f90 type.f90 mesh.f90 devc.f90 data.f90
	$(FCOMPL) -c $(FFLAGS_PART) $<
vege.o : vege.f90 func.f90 prec.f90 cons.f90 type.f90 mesh.f90 devc.f90 part.f90
	$(FCOMPL) -c $(FFLAGS_VEGE) $<
read.o: read.f90 func.f90 prec.f90 cons.f90 type.f90 mesh.f90 devc.f90 ctrl.f90 irad.f90 evac.f90 hvac.f90 scrc.f90 data.f90 
	$(FCOMPL) -c $(FFLAGS_READ) $<
init.o : init.f90 func.f90 prec.f90 cons.f90 type.f90 mesh.f90 devc.f90 irad.f90 pois.f90 data.f90 
	$(FCOMPL) -c $(FFLAGS_INIT) $<
dump.o : dump.f90 func.f90 prec.f90 cons.f90 type.f90 mesh.f90 devc.f90 evac.f90 smvv.f90 isob.c turb.f90 scrc.f90 data.f90
	$(FCOMPL) -c $(FFLAGS_DUMP) $<
main.o : main.f90 func.f90 prec.f90 cons.f90 type.f90 mesh.f90 devc.f90 smvv.f90 isob.c mass.f90 divg.f90 velo.f90 wall.f90 fire.f90 irad.f90 ieva.f90 radi.f90 evac.f90 part.f90 vege.f90 dump.f90 read.f90 init.f90 pres.f90 pois.f90 ctrl.f90 turb.f90 hvac.f90 scrc.f90 data.f90 
	$(FCOMPL) -c $(FFLAGS_MAIN) $<

# *** Object dependencies for Windows ***
prec.obj : prec.f90
	$(FCOMPL) -c $(FFLAGS) $<
isob.obj : isob.c
	$(CCOMPL) -c $(CFLAGS) $<
smvv.obj : smvv.f90 isob.c
	$(FCOMPL) -c $(FFLAGS) $<
cons.obj : cons.f90 prec.f90
	$(FCOMPL) -c $(FFLAGS) $<
mpis.obj : mpis.f90 prec.f90
	$(FCOMPL) -c $(FFLAGS) $<
mpip.obj : mpip.f90
	$(FCOMPL) -c $(FFLAGS) $<
type.obj : type.f90 prec.f90 cons.f90
	$(FCOMPL) -c $(FFLAGS) $<
devc.obj : devc.f90 prec.f90
	$(FCOMPL) -c $(FFLAGS) $<
pois.obj : pois.f90 prec.f90 cons.f90
	$(FCOMPL) -c $(FFLAGS) $<
mesh.obj : mesh.f90 prec.f90 type.f90
	$(FCOMPL) -c $(FFLAGS) $<
data.obj : data.f90 prec.f90 type.f90 func.f90 cons.f90 mesh.f90
	$(FCOMPL) -c $(FFLAGS) $<
func.obj : func.f90 prec.f90 cons.f90 type.f90 mesh.f90 devc.f90
	$(FCOMPL) -c $(FFLAGS) $<
ctrl.obj : ctrl.f90 prec.f90 cons.f90 type.f90 mesh.f90 func.f90
	$(FCOMPL) -c $(FFLAGS) $<
turb.obj : turb.f90 func.f90 prec.f90 cons.f90 mesh.f90
	$(FCOMPL) -c $(FFLAGS) $<
scrc.obj : scrc.f90 prec.f90 cons.f90 mesh.f90 func.f90 pois.f90
	$(FCOMPL) -c $(FFLAGS) $<
irad.obj : irad.f90 func.f90 prec.f90 cons.f90 type.f90 mesh.f90
	$(FCOMPL) -c $(FFLAGS) $<
ieva.obj : ieva.f90 func.f90 prec.f90 cons.f90 type.f90 mesh.f90
	$(FCOMPL) -c $(FFLAGS) $<
fire.obj : fire.f90 func.f90 prec.f90 cons.f90 type.f90 mesh.f90
	$(FCOMPL) -c $(FFLAGS) $<
hvac.obj : hvac.f90 func.f90 prec.f90 cons.f90 type.f90 mesh.f90 ctrl.f90
	$(FCOMPL) -c $(FFLAGS) $<
wall.obj : wall.f90 func.f90 prec.f90 cons.f90 type.f90 mesh.f90 hvac.f90
	$(FCOMPL) -c $(FFLAGS) $<
velo.obj : velo.f90 func.f90 prec.f90 cons.f90 type.f90 mesh.f90 turb.f90
	$(FCOMPL) -c $(FFLAGS) $<
evac.obj : evac.f90 func.f90 prec.f90 cons.f90 type.f90 mesh.f90 ieva.f90 data.f90
	$(FCOMPL) -c $(FFLAGS) $<
divg.obj : divg.f90 func.f90 prec.f90 cons.f90 type.f90 mesh.f90 scrc.f90 evac.f90
	$(FCOMPL) -c $(FFLAGS) $<
mass.obj : mass.f90 func.f90 prec.f90 cons.f90 type.f90 mesh.f90 turb.f90
	$(FCOMPL) -c $(FFLAGS) $<
radi.obj : radi.f90 func.f90 prec.f90 cons.f90 type.f90 mesh.f90 irad.f90
	$(FCOMPL) -c $(FFLAGS) $<
pres.obj : pres.f90 func.f90 prec.f90 cons.f90 type.f90 mesh.f90 pois.f90 velo.f90 scrc.f90
	$(FCOMPL) -c $(FFLAGS) $<
part.obj : part.f90 func.f90 prec.f90 cons.f90 type.f90 mesh.f90 devc.f90 data.f90
	$(FCOMPL) -c $(FFLAGS) $<
vege.obj : vege.f90 func.f90 prec.f90 cons.f90 type.f90 mesh.f90 devc.f90 part.f90
	$(FCOMPL) -c $(FFLAGS) $<
read.obj: read.f90 func.f90 prec.f90 cons.f90 type.f90 mesh.f90 devc.f90 ctrl.f90 irad.f90 evac.f90 hvac.f90 scrc.f90 data.f90 
	$(FCOMPL) -c $(FFLAGS) $<
init.obj : init.f90 func.f90 prec.f90 cons.f90 type.f90 mesh.f90 devc.f90 irad.f90 pois.f90 data.f90 
	$(FCOMPL) -c $(FFLAGS) $<
dump.obj : dump.f90 func.f90 prec.f90 cons.f90 type.f90 mesh.f90 devc.f90 evac.f90 smvv.f90 isob.c turb.f90 scrc.f90 data.f90
	$(FCOMPL) -c $(FFLAGS) $<
main.obj : main.f90 func.f90 prec.f90 cons.f90 type.f90 mesh.f90 devc.f90 smvv.f90 isob.c mass.f90 divg.f90 velo.f90 wall.f90 fire.f90 irad.f90 ieva.f90 radi.f90 evac.f90 part.f90 vege.f90 dump.f90 read.f90 init.f90 pres.f90 pois.f90 ctrl.f90 turb.f90 hvac.f90 scrc.f90 data.f90 
	$(FCOMPL) -c $(FFLAGS) $<

#*** Clean Target to remove Object and Module files ***

.PHONY : clean
clean:
	-rm -f *.o *.mod *.obj 

.PHONY : winclean
winclean:
	-erase *.mod *.obj 
