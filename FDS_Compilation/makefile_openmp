# Makefile for Fire Dynamics Simulator (FDS)

# To use this makefile, select the appropriate compiler and OS from the list below. For example, to
# compile the 64 bit parallel version (MPI) of FDS under Linux with OpenMP using the Intel compilers type:
#
# make openmp_mpi_intel_linux_64

# A make utility for windows may be downloaded from http://gnuwin32.sourceforge.net/packages/make.htm

# The variable VPATH defines where the source code is relative to the current directory

VPATH = ../FDS_Source

# Definition of the non-MPI or MPI object variables

objf_serial = prec.o mpis.o cons.o devc.o data.o type.o mesh.o func.o smvv.o irad.o \
              ieva.o pois.o scrc.o radi.o evac.o part.o vege.o ctrl.o turb.o geom.o dump.o hvac.o mass.o read.o \
              wall.o fire.o divg.o init.o velo.o pres.o main.o
obj_serial = $(objf_serial)

objwinf_serial = $(objf_serial:.o=.obj)
objwin_serial = $(obj_serial:.o=.obj)

objf_mpi = prec.o mpip.o cons.o devc.o data.o type.o mesh.o func.o smvv.o irad.o \
           ieva.o pois.o scrc.o radi.o evac.o part.o vege.o ctrl.o turb.o geom.o dump.o hvac.o mass.o read.o \
           wall.o fire.o divg.o init.o velo.o pres.o main.o
obj_mpi = $(objf_mpi)

objwinf_mpi = $(objf_mpi:.o=.obj)
objwin_mpi = $(obj_mpi:.o=.obj)

# General Purpose Rules

no_target:
	@echo \******** You did not specify a make target \********
	@echo Please read the comments at the top of the makefile

setup:
%.o : %.mod

setup_win:
%.obj : %.mod

.SUFFIXES: .c .f90 .o .obj

# Files which have OpenMP compiler directives have to be compiled
# by using the FOPENMPFLAG
# read.f90 has to be compiled without optimization, otherwise
# errors occure when reading .fds files.

func.o: FFLAGS += $(FOPENMPFLAGS)
#part.o: FFLAGS += $(FOPENMPFLAGS)
#turb.o: FFLAGS += $(FOPENMPFLAGS)
mass.o: FFLAGS += $(FOPENMPFLAGS)
fire.o: FFLAGS += $(FOPENMPFLAGS)
#divg.o: FFLAGS += $(FOPENMPFLAGS)
#velo.o: FFLAGS += $(FOPENMPFLAGS)
pres.o: FFLAGS += $(FOPENMPFLAGS)
#pois.o: FFLAGS += $(FOPENMPFLAGS)
read.o: FOPTIMIZATIONFLAGS = -O0

func.obj: FFLAGS += $(FOPENMPFLAGS)
#part.obj: FFLAGS += $(FOPENMPFLAGS)
#turb.obj: FFLAGS += $(FOPENMPFLAGS)
mass.obj: FFLAGS += $(FOPENMPFLAGS)
fire.obj: FFLAGS += $(FOPENMPFLAGS)
#divg.obj: FFLAGS += $(FOPENMPFLAGS)
#velo.obj: FFLAGS += $(FOPENMPFLAGS)
pres.obj: FFLAGS += $(FOPENMPFLAGS)
#pois.obj: FFLAGS += $(FOPENMPFLAGS)
read.obj: FOPTIMIZATIONFLAGS = -Od

.f90.o:
	$(FCOMPL) -c $(FOPTIMIZATIONFLAGS) $(FFLAGS) $<
.f90.obj:
	$(FCOMPL) -c $(FOPTIMIZATIONFLAGS) $(FFLAGS) $<

#*** Compiler Specific Rules ***

# Windows Intel Compiler, version 11

 #*** note: the following scripts (located in ..\Scripts directory) must be run before running make with this target
 #    ..\Scripts\iclvars ia32
 #    ..\Scripts\ifortvars ia32

openmp_intel_win_32 : FFLAGS = /Qvec_report0
openmp_intel_win_32 : FCOMPL = ifort
openmp_intel_win_32 : CCOMPL = icl
openmp_intel_win_32 : FOPENMPFLAGS = /Qopenmp
openmp_intel_win_32 : FOPTIMIZATIONFLAGS = -O2
openmp_intel_win_32 : obj = fds_openmp_win_32
openmp_intel_win_32 : setup_win $(objwin_serial)
	$(FCOMPL) -o $(obj) $(FOPTIMIZATIONFLAGS) $(FFLAGS) $(FOPENMPFLAGS) /F100000000 $(objwin_serial)

openmp_mpi_intel_win_32 : MPILIB = "c:\program files\mpich2\lib\fmpich2.lib"
openmp_mpi_intel_win_32 : MPIINCLUDE = "c:\program files\mpich2\include"
openmp_mpi_intel_win_32 : FFLAGS = /Qvec_report0 /I $(MPIINCLUDE)
openmp_mpi_intel_win_32 : FOPENMPFLAGS = /Qopenmp
openmp_mpi_intel_win_32 : FOPTIMIZATIONFLAGS = -O2
openmp_mpi_intel_win_32 : FCOMPL = ifort
openmp_mpi_intel_win_32 : CCOMPL = icl
openmp_mpi_intel_win_32 : obj = fds_openmp_mpi_win_32
openmp_mpi_intel_win_32 : setup_win $(objwin_mpi)
	$(FCOMPL) -o $(obj) $(FOPTIMIZATIONFLAGS) $(FFLAGS) $(FOPENMPFLAGS) /F100000000 $(objwin_mpi) $(MPILIB)

openmp_intel_win_64 : FFLAGS = /Qvec_report0 /nologo
openmp_intel_win_64 : FCOMPL = ifort
openmp_intel_win_64 : CCOMPL = icl
openmp_intel_win_64 : FOPENMPFLAGS = /Qopenmp
openmp_intel_win_64 : FOPTIMIZATIONFLAGS = -O2
openmp_intel_win_64 : obj = fds_win_64_openmp
openmp_intel_win_64 : setup_win $(objwin_serial)
	$(FCOMPL) -o $(obj) $(FOPTIMIZATIONFLAGS) $(FFLAGS) $(FOPENMPFLAGS) /F100000000 $(objwin_serial)

openmp_intel_win_64_db : FFLAGS = /Qvec_report0 /nologo /debug:all /Od /extend_source:132 /warn:all /warn:nointerfaces /Qtrapuv /fp:strict /fp:except /traceback /check:all /stand:f03 /Z7
openmp_intel_win_64_db : FCOMPL = ifort
openmp_intel_win_64_db : CCOMPL = icl
openmp_intel_win_64_db : FOPENMPFLAGS = /Qopenmp
openmp_intel_win_64_db : FOPTIMIZATIONFLAGS = /Od
openmp_intel_win_64_db : obj = fds_win_64_openmp_db
openmp_intel_win_64_db : setup_win $(objwin_serial)
	$(FCOMPL) -o $(obj) $(FOPTIMIZATIONFLAGS) $(FFLAGS) $(FOPENMPFLAGS) /F100000000 $(objwin_serial)

# Intel Compiler for OS X, version 12

openmp_intel_osx_64 : FFLAGS = -m64 -static-intel -vec_report0
#openmp_intel_osx_64 : FFLAGS = -m64 -vec_report0
openmp_intel_osx_64 : FOPENMPFLAGS = -openmp -openmp-link static
openmp_intel_osx_64 : FOPTIMIZATIONFLAGS = -O2
openmp_intel_osx_64 : FCOMPL = ifort
openmp_intel_osx_64 : CCOMPL = icc
openmp_intel_osx_64 : obj = fds_openmp_intel_osx_64
openmp_intel_osx_64 : setup $(obj_serial)
	$(FCOMPL) $(FOPTIMIZATIONFLAGS) $(FFLAGS) $(FOPENMPFLAGS) -o $(obj) $(obj_serial)

### -check produces a runtime-error in the debug version
openmp_intel_osx_64_db : FFLAGS = -m64 -static-intel -vec_report0 -warn unused -auto -WB -traceback -g -fltconsistency
openmp_intel_osx_64_db : FOPENMPFLAGS = -openmp -openmp-link static
openmp_intel_osx_64_db : FOPTIMIZATIONFLAGS = -O0
openmp_intel_osx_64_db : FCOMPL = ifort
openmp_intel_osx_64_db : CCOMPL = icc
openmp_intel_osx_64_db : obj = fds_openmp_intel_osx_64_db
openmp_intel_osx_64_db : setup $(obj_serial)
	$(FCOMPL) $(FOPTIMIZATIONFLAGS) $(FFLAGS) $(FOPENMPFLAGS) -o $(obj) $(obj_serial)

# Intel Compiler for Linux, version 13

openmp_intel_linux_32 : FFLAGS = -m32 -static -vec_report0
openmp_intel_linux_32 : FOPENMPFLAGS = -openmp -openmp-link static
openmp_intel_linux_32 : FOPTIMIZATIONFLAGS = -O2
openmp_intel_linux_32 : FCOMPL = ifort
openmp_intel_linux_32 : CCOMPL = icc
openmp_intel_linux_32 : obj = fds_openmp_intel_linux_32
openmp_intel_linux_32 : setup $(obj_serial)
	$(FCOMPL) $(FOPTIMIZATIONFLAGS) $(FFLAGS) $(FOPENMPFLAGS) -o $(obj) $(obj_serial)

### -check produces a runtime-error in the debug version
openmp_intel_linux_32_db : FFLAGS = -m32 -static -vec_report0 -warn unused -auto -WB -traceback -g -fltconsistency
openmp_intel_linux_32_db : FOPENMPFLAGS = -openmp -openmp-link static
openmp_intel_linux_32_db : FOPTIMIZATIONFLAGS = -O0
openmp_intel_linux_32_db : FCOMPL = ifort
openmp_intel_linux_32_db : CCOMPL = icc
openmp_intel_linux_32_db : obj = fds_openmp_intel_linux_32_db
openmp_intel_linux_32_db : setup $(obj_serial)
	$(FCOMPL) $(FOPTIMIZATIONFLAGS) $(FFLAGS) $(FOPENMPFLAGS) -o $(obj) $(obj_serial)

openmp_intel_linux_32_tcheck : FFLAGS = -m32 -g
openmp_intel_linux_32_tcheck : FOPENMPFLAGS = -openmp -tcheck
openmp_intel_linux_32_tcheck : FOPTIMIZATIONFLAGS = -O0
openmp_intel_linux_32_tcheck : FCOMPL = ifort
openmp_intel_linux_32_tcheck : CCOMPL = icc
openmp_intel_linux_32_tcheck : obj = fds_openmp_intel_linux_32_tcheck
openmp_intel_linux_32_tcheck : setup $(obj_serial)
	$(FCOMPL) $(FOPTIMIZATIONFLAGS) $(FFLAGS) $(FOPENMPFLAGS) -o $(obj) $(obj_serial)

openmp_mpi_intel_linux_32 : FFLAGS = -m32 -vec_report0
openmp_mpi_intel_linux_32 : FOPENMPFLAGS = -openmp -openmp-link static
openmp_mpi_intel_linux_32 : FOPTIMIZATIONFLAGS = -O2
openmp_mpi_intel_linux_32 : FCOMPL = mpif90 -fc=ifort
openmp_mpi_intel_linux_32 : CCOMPL = icc
openmp_mpi_intel_linux_32 : obj = fds_openmp_mpi_intel_linux_32
openmp_mpi_intel_linux_32 : setup $(obj_mpi)
	$(FCOMPL) $(FOPTIMIZATIONFLAGS) $(FFLAGS) $(FOPENMPFLAGS) -o $(obj) $(obj_mpi)

openmp_intel_linux_64 : FFLAGS = -m64 -static -vec_report0
#openmp_intel_linux_64 : FFLAGS = -m64 -vec_report0
openmp_intel_linux_64 : FOPENMPFLAGS = -openmp -openmp-link static
openmp_intel_linux_64 : FOPTIMIZATIONFLAGS = -O2
openmp_intel_linux_64 : FCOMPL = ifort
openmp_intel_linux_64 : CCOMPL = icc
openmp_intel_linux_64 : obj = fds_openmp_intel_linux_64
openmp_intel_linux_64 : setup $(obj_serial)
	$(FCOMPL) $(FOPTIMIZATIONFLAGS) $(FFLAGS) $(FOPENMPFLAGS) -o $(obj) $(obj_serial)

### -check produces a runtime-error in the debug version
openmp_intel_linux_64_db : FFLAGS = -m64 -static -vec_report0 -warn unused -auto -WB -traceback -g -fltconsistency
openmp_intel_linux_64_db : FOPENMPFLAGS = -openmp -openmp-link static
openmp_intel_linux_64_db : FOPTIMIZATIONFLAGS = -O0
openmp_intel_linux_64_db : FCOMPL = ifort
openmp_intel_linux_64_db : CCOMPL = icc
openmp_intel_linux_64_db : obj = fds_openmp_intel_linux_64_db
openmp_intel_linux_64_db : setup $(obj_serial)
	$(FCOMPL) $(FOPTIMIZATIONFLAGS) $(FFLAGS) $(FOPENMPFLAGS) -o $(obj) $(obj_serial)

openmp_intel_linux_64_tcheck : FFLAGS = -m64 -g
openmp_intel_linux_64_tcheck : FOPENMPFLAGS = -openmp -tcheck
openmp_intel_linux_64_tcheck : FOPTIMIZATIONFLAGS = -O0
openmp_intel_linux_64_tcheck : FCOMPL = ifort
openmp_intel_linux_64_tcheck : CCOMPL = icc
openmp_intel_linux_64_tcheck : obj = fds_openmp_intel_linux_64_tcheck
openmp_intel_linux_64_tcheck : setup $(obj_serial)
	$(FCOMPL) $(FOPTIMIZATIONFLAGS) $(FFLAGS) $(FOPENMPFLAGS) -o $(obj) $(obj_serial)

openmp_mpi_intel_linux_64 : FFLAGS = -m64 -vec_report0
openmp_mpi_intel_linux_64 : FOPENMPFLAGS = -openmp -openmp-link static
openmp_mpi_intel_linux_64 : FOPTIMIZATIONFLAGS = -O2
openmp_mpi_intel_linux_64 : FCOMPL = mpif90 -fc=ifort
openmp_mpi_intel_linux_64 : CCOMPL = icc
openmp_mpi_intel_linux_64 : obj = fds_openmp_mpi_intel_linux_64
openmp_mpi_intel_linux_64 : setup $(obj_mpi)
	$(FCOMPL) $(FOPTIMIZATIONFLAGS) $(FFLAGS) $(FOPENMPFLAGS) -o $(obj) $(obj_mpi)

openmp_sun_linux_64 : FFLAGS = -m64 -Bstatic
openmp_sun_linux_64 : FOPENMPFLAGS = -openmp
#openmp_sun_linux_64 : FOPENMPFLAGS = -openmp -vpara -XlistMP -xloopinfo
openmp_sun_linux_64 : FOPTIMIZATIONFLAGS = -O0
openmp_sun_linux_64 : FCOMPL = sunf95
openmp_sun_linux_64 : CCOMPL = suncc
openmp_sun_linux_64 : obj = fds_openmp_sun_linux_64
openmp_sun_linux_64 : setup $(obj_serial)
	$(FCOMPL) $(FOPTIMIZATIONFLAGS) $(FFLAGS) $(FOPENMPFLAGS) -o $(obj) $(obj_serial)


#*** End Compiler Specific Rules ***

# *** Object Dependencies ***

smvv.o : prec.o func.o
cons.o : prec.o
mpis.o : prec.o
type.o : prec.o cons.o
devc.o : prec.o
pois.o : prec.o cons.o
mesh.o : prec.o type.o
data.o : prec.o func.o cons.o
func.o : prec.o cons.o type.o mesh.o devc.o
ctrl.o : prec.o cons.o type.o mesh.o func.o
turb.o : func.o prec.o cons.o mesh.o
geom.o : func.o prec.o cons.o mesh.o
scrc.o : prec.o cons.o mesh.o func.o pois.o
irad.o : func.o prec.o cons.o type.o mesh.o
ieva.o : func.o prec.o cons.o type.o mesh.o
fire.o : func.o prec.o cons.o type.o mesh.o
hvac.o : func.o prec.o cons.o type.o mesh.o ctrl.o
wall.o : func.o prec.o cons.o type.o mesh.o hvac.o
velo.o : func.o prec.o cons.o type.o mesh.o turb.o geom.o
evac.o : func.o prec.o cons.o type.o mesh.o ieva.o data.o
divg.o : func.o prec.o cons.o type.o mesh.o scrc.o evac.o
mass.o : func.o prec.o cons.o type.o mesh.o turb.o
radi.o : func.o prec.o cons.o type.o mesh.o irad.o
pres.o : func.o prec.o cons.o type.o mesh.o pois.o velo.o scrc.o
part.o : func.o prec.o cons.o type.o mesh.o devc.o data.o
vege.o : func.o prec.o cons.o type.o mesh.o devc.o part.o
read.o : func.o prec.o cons.o type.o mesh.o devc.o ctrl.o irad.o evac.o hvac.o scrc.o data.o geom.o mass.o
init.o : func.o prec.o cons.o type.o mesh.o devc.o irad.o pois.o data.o evac.o
dump.o : func.o prec.o cons.o type.o mesh.o devc.o evac.o smvv.o turb.o scrc.o data.o radi.o
main.o : func.o prec.o cons.o type.o mesh.o devc.o smvv.o mass.o divg.o velo.o wall.o fire.o irad.o ieva.o radi.o evac.o part.o vege.o dump.o read.o init.o pres.o pois.o ctrl.o turb.o hvac.o scrc.o data.o geom.o

smvv.obj : prec.obj func.obj
cons.obj : prec.obj
mpis.obj : prec.obj
type.obj : prec.obj cons.obj
devc.obj : prec.obj
pois.obj : prec.obj cons.obj
mesh.obj : prec.obj type.obj
data.obj : prec.obj func.obj cons.obj
func.obj : prec.obj cons.obj type.obj mesh.obj devc.obj
ctrl.obj : prec.obj cons.obj type.obj mesh.obj func.obj
turb.obj : func.obj prec.obj cons.obj mesh.obj
geom.obj : func.obj prec.obj cons.obj mesh.obj
scrc.obj : prec.obj cons.obj mesh.obj func.obj pois.obj
irad.obj : func.obj prec.obj cons.obj type.obj mesh.obj
ieva.obj : func.obj prec.obj cons.obj type.obj mesh.obj
fire.obj : func.obj prec.obj cons.obj type.obj mesh.obj
hvac.obj : func.obj prec.obj cons.obj type.obj mesh.obj ctrl.obj
wall.obj : func.obj prec.obj cons.obj type.obj mesh.obj hvac.obj
velo.obj : func.obj prec.obj cons.obj type.obj mesh.obj turb.obj geom.obj
evac.obj : func.obj prec.obj cons.obj type.obj mesh.obj ieva.obj data.obj
divg.obj : func.obj prec.obj cons.obj type.obj mesh.obj scrc.obj evac.obj
mass.obj : func.obj prec.obj cons.obj type.obj mesh.obj turb.obj
radi.obj : func.obj prec.obj cons.obj type.obj mesh.obj irad.obj
pres.obj : func.obj prec.obj cons.obj type.obj mesh.obj pois.obj velo.obj scrc.obj
part.obj : func.obj prec.obj cons.obj type.obj mesh.obj devc.obj data.obj
vege.obj : func.obj prec.obj cons.obj type.obj mesh.obj devc.obj part.obj
read.obj : func.obj prec.obj cons.obj type.obj mesh.obj devc.obj ctrl.obj irad.obj evac.obj hvac.obj scrc.obj data.obj geom.obj mass.obj
init.obj : func.obj prec.obj cons.obj type.obj mesh.obj devc.obj irad.obj pois.obj data.obj evac.obj
dump.obj : func.obj prec.obj cons.obj type.obj mesh.obj devc.obj evac.obj smvv.obj turb.obj scrc.obj data.obj
main.obj : func.obj prec.obj cons.obj type.obj mesh.obj devc.obj smvv.obj mass.obj divg.obj velo.obj wall.obj fire.obj irad.obj ieva.obj radi.obj evac.obj part.obj vege.obj dump.obj read.obj init.obj pres.obj pois.obj ctrl.obj turb.obj hvac.obj scrc.obj data.obj geom.obj


#*** Clean Target to remove Object and Module files ***

.PHONY : clean
clean:
	-rm -f *.o *.mod *.obj

.PHONY : winclean
winclean:
	-erase *.mod *.obj
